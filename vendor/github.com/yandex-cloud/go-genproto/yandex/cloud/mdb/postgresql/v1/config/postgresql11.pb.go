// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yandex/cloud/mdb/postgresql/v1/config/postgresql11.proto

package postgresql

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PostgresqlConfig11_WalLevel int32

const (
	PostgresqlConfig11_WAL_LEVEL_UNSPECIFIED PostgresqlConfig11_WalLevel = 0
	PostgresqlConfig11_WAL_LEVEL_REPLICA     PostgresqlConfig11_WalLevel = 1
	PostgresqlConfig11_WAL_LEVEL_LOGICAL     PostgresqlConfig11_WalLevel = 2
)

var PostgresqlConfig11_WalLevel_name = map[int32]string{
	0: "WAL_LEVEL_UNSPECIFIED",
	1: "WAL_LEVEL_REPLICA",
	2: "WAL_LEVEL_LOGICAL",
}

var PostgresqlConfig11_WalLevel_value = map[string]int32{
	"WAL_LEVEL_UNSPECIFIED": 0,
	"WAL_LEVEL_REPLICA":     1,
	"WAL_LEVEL_LOGICAL":     2,
}

func (x PostgresqlConfig11_WalLevel) String() string {
	return proto.EnumName(PostgresqlConfig11_WalLevel_name, int32(x))
}

func (PostgresqlConfig11_WalLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7f28b14e19e1f835, []int{0, 0}
}

type PostgresqlConfig11_SynchronousCommit int32

const (
	PostgresqlConfig11_SYNCHRONOUS_COMMIT_UNSPECIFIED  PostgresqlConfig11_SynchronousCommit = 0
	PostgresqlConfig11_SYNCHRONOUS_COMMIT_ON           PostgresqlConfig11_SynchronousCommit = 1
	PostgresqlConfig11_SYNCHRONOUS_COMMIT_OFF          PostgresqlConfig11_SynchronousCommit = 2
	PostgresqlConfig11_SYNCHRONOUS_COMMIT_LOCAL        PostgresqlConfig11_SynchronousCommit = 3
	PostgresqlConfig11_SYNCHRONOUS_COMMIT_REMOTE_WRITE PostgresqlConfig11_SynchronousCommit = 4
	PostgresqlConfig11_SYNCHRONOUS_COMMIT_REMOTE_APPLY PostgresqlConfig11_SynchronousCommit = 5
)

var PostgresqlConfig11_SynchronousCommit_name = map[int32]string{
	0: "SYNCHRONOUS_COMMIT_UNSPECIFIED",
	1: "SYNCHRONOUS_COMMIT_ON",
	2: "SYNCHRONOUS_COMMIT_OFF",
	3: "SYNCHRONOUS_COMMIT_LOCAL",
	4: "SYNCHRONOUS_COMMIT_REMOTE_WRITE",
	5: "SYNCHRONOUS_COMMIT_REMOTE_APPLY",
}

var PostgresqlConfig11_SynchronousCommit_value = map[string]int32{
	"SYNCHRONOUS_COMMIT_UNSPECIFIED":  0,
	"SYNCHRONOUS_COMMIT_ON":           1,
	"SYNCHRONOUS_COMMIT_OFF":          2,
	"SYNCHRONOUS_COMMIT_LOCAL":        3,
	"SYNCHRONOUS_COMMIT_REMOTE_WRITE": 4,
	"SYNCHRONOUS_COMMIT_REMOTE_APPLY": 5,
}

func (x PostgresqlConfig11_SynchronousCommit) String() string {
	return proto.EnumName(PostgresqlConfig11_SynchronousCommit_name, int32(x))
}

func (PostgresqlConfig11_SynchronousCommit) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7f28b14e19e1f835, []int{0, 1}
}

type PostgresqlConfig11_ConstraintExclusion int32

const (
	PostgresqlConfig11_CONSTRAINT_EXCLUSION_UNSPECIFIED PostgresqlConfig11_ConstraintExclusion = 0
	PostgresqlConfig11_CONSTRAINT_EXCLUSION_ON          PostgresqlConfig11_ConstraintExclusion = 1
	PostgresqlConfig11_CONSTRAINT_EXCLUSION_OFF         PostgresqlConfig11_ConstraintExclusion = 2
	PostgresqlConfig11_CONSTRAINT_EXCLUSION_PARTITION   PostgresqlConfig11_ConstraintExclusion = 3
)

var PostgresqlConfig11_ConstraintExclusion_name = map[int32]string{
	0: "CONSTRAINT_EXCLUSION_UNSPECIFIED",
	1: "CONSTRAINT_EXCLUSION_ON",
	2: "CONSTRAINT_EXCLUSION_OFF",
	3: "CONSTRAINT_EXCLUSION_PARTITION",
}

var PostgresqlConfig11_ConstraintExclusion_value = map[string]int32{
	"CONSTRAINT_EXCLUSION_UNSPECIFIED": 0,
	"CONSTRAINT_EXCLUSION_ON":          1,
	"CONSTRAINT_EXCLUSION_OFF":         2,
	"CONSTRAINT_EXCLUSION_PARTITION":   3,
}

func (x PostgresqlConfig11_ConstraintExclusion) String() string {
	return proto.EnumName(PostgresqlConfig11_ConstraintExclusion_name, int32(x))
}

func (PostgresqlConfig11_ConstraintExclusion) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7f28b14e19e1f835, []int{0, 2}
}

type PostgresqlConfig11_ForceParallelMode int32

const (
	PostgresqlConfig11_FORCE_PARALLEL_MODE_UNSPECIFIED PostgresqlConfig11_ForceParallelMode = 0
	PostgresqlConfig11_FORCE_PARALLEL_MODE_ON          PostgresqlConfig11_ForceParallelMode = 1
	PostgresqlConfig11_FORCE_PARALLEL_MODE_OFF         PostgresqlConfig11_ForceParallelMode = 2
	PostgresqlConfig11_FORCE_PARALLEL_MODE_REGRESS     PostgresqlConfig11_ForceParallelMode = 3
)

var PostgresqlConfig11_ForceParallelMode_name = map[int32]string{
	0: "FORCE_PARALLEL_MODE_UNSPECIFIED",
	1: "FORCE_PARALLEL_MODE_ON",
	2: "FORCE_PARALLEL_MODE_OFF",
	3: "FORCE_PARALLEL_MODE_REGRESS",
}

var PostgresqlConfig11_ForceParallelMode_value = map[string]int32{
	"FORCE_PARALLEL_MODE_UNSPECIFIED": 0,
	"FORCE_PARALLEL_MODE_ON":          1,
	"FORCE_PARALLEL_MODE_OFF":         2,
	"FORCE_PARALLEL_MODE_REGRESS":     3,
}

func (x PostgresqlConfig11_ForceParallelMode) String() string {
	return proto.EnumName(PostgresqlConfig11_ForceParallelMode_name, int32(x))
}

func (PostgresqlConfig11_ForceParallelMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7f28b14e19e1f835, []int{0, 3}
}

type PostgresqlConfig11_LogLevel int32

const (
	PostgresqlConfig11_LOG_LEVEL_UNSPECIFIED PostgresqlConfig11_LogLevel = 0
	PostgresqlConfig11_LOG_LEVEL_DEBUG5      PostgresqlConfig11_LogLevel = 1
	PostgresqlConfig11_LOG_LEVEL_DEBUG4      PostgresqlConfig11_LogLevel = 2
	PostgresqlConfig11_LOG_LEVEL_DEBUG3      PostgresqlConfig11_LogLevel = 3
	PostgresqlConfig11_LOG_LEVEL_DEBUG2      PostgresqlConfig11_LogLevel = 4
	PostgresqlConfig11_LOG_LEVEL_DEBUG1      PostgresqlConfig11_LogLevel = 5
	PostgresqlConfig11_LOG_LEVEL_LOG         PostgresqlConfig11_LogLevel = 6
	PostgresqlConfig11_LOG_LEVEL_NOTICE      PostgresqlConfig11_LogLevel = 7
	PostgresqlConfig11_LOG_LEVEL_WARNING     PostgresqlConfig11_LogLevel = 8
	PostgresqlConfig11_LOG_LEVEL_ERROR       PostgresqlConfig11_LogLevel = 9
	PostgresqlConfig11_LOG_LEVEL_FATAL       PostgresqlConfig11_LogLevel = 10
	PostgresqlConfig11_LOG_LEVEL_PANIC       PostgresqlConfig11_LogLevel = 11
)

var PostgresqlConfig11_LogLevel_name = map[int32]string{
	0:  "LOG_LEVEL_UNSPECIFIED",
	1:  "LOG_LEVEL_DEBUG5",
	2:  "LOG_LEVEL_DEBUG4",
	3:  "LOG_LEVEL_DEBUG3",
	4:  "LOG_LEVEL_DEBUG2",
	5:  "LOG_LEVEL_DEBUG1",
	6:  "LOG_LEVEL_LOG",
	7:  "LOG_LEVEL_NOTICE",
	8:  "LOG_LEVEL_WARNING",
	9:  "LOG_LEVEL_ERROR",
	10: "LOG_LEVEL_FATAL",
	11: "LOG_LEVEL_PANIC",
}

var PostgresqlConfig11_LogLevel_value = map[string]int32{
	"LOG_LEVEL_UNSPECIFIED": 0,
	"LOG_LEVEL_DEBUG5":      1,
	"LOG_LEVEL_DEBUG4":      2,
	"LOG_LEVEL_DEBUG3":      3,
	"LOG_LEVEL_DEBUG2":      4,
	"LOG_LEVEL_DEBUG1":      5,
	"LOG_LEVEL_LOG":         6,
	"LOG_LEVEL_NOTICE":      7,
	"LOG_LEVEL_WARNING":     8,
	"LOG_LEVEL_ERROR":       9,
	"LOG_LEVEL_FATAL":       10,
	"LOG_LEVEL_PANIC":       11,
}

func (x PostgresqlConfig11_LogLevel) String() string {
	return proto.EnumName(PostgresqlConfig11_LogLevel_name, int32(x))
}

func (PostgresqlConfig11_LogLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7f28b14e19e1f835, []int{0, 4}
}

type PostgresqlConfig11_LogErrorVerbosity int32

const (
	PostgresqlConfig11_LOG_ERROR_VERBOSITY_UNSPECIFIED PostgresqlConfig11_LogErrorVerbosity = 0
	PostgresqlConfig11_LOG_ERROR_VERBOSITY_TERSE       PostgresqlConfig11_LogErrorVerbosity = 1
	PostgresqlConfig11_LOG_ERROR_VERBOSITY_DEFAULT     PostgresqlConfig11_LogErrorVerbosity = 2
	PostgresqlConfig11_LOG_ERROR_VERBOSITY_VERBOSE     PostgresqlConfig11_LogErrorVerbosity = 3
)

var PostgresqlConfig11_LogErrorVerbosity_name = map[int32]string{
	0: "LOG_ERROR_VERBOSITY_UNSPECIFIED",
	1: "LOG_ERROR_VERBOSITY_TERSE",
	2: "LOG_ERROR_VERBOSITY_DEFAULT",
	3: "LOG_ERROR_VERBOSITY_VERBOSE",
}

var PostgresqlConfig11_LogErrorVerbosity_value = map[string]int32{
	"LOG_ERROR_VERBOSITY_UNSPECIFIED": 0,
	"LOG_ERROR_VERBOSITY_TERSE":       1,
	"LOG_ERROR_VERBOSITY_DEFAULT":     2,
	"LOG_ERROR_VERBOSITY_VERBOSE":     3,
}

func (x PostgresqlConfig11_LogErrorVerbosity) String() string {
	return proto.EnumName(PostgresqlConfig11_LogErrorVerbosity_name, int32(x))
}

func (PostgresqlConfig11_LogErrorVerbosity) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7f28b14e19e1f835, []int{0, 5}
}

type PostgresqlConfig11_LogStatement int32

const (
	PostgresqlConfig11_LOG_STATEMENT_UNSPECIFIED PostgresqlConfig11_LogStatement = 0
	PostgresqlConfig11_LOG_STATEMENT_NONE        PostgresqlConfig11_LogStatement = 1
	PostgresqlConfig11_LOG_STATEMENT_DDL         PostgresqlConfig11_LogStatement = 2
	PostgresqlConfig11_LOG_STATEMENT_MOD         PostgresqlConfig11_LogStatement = 3
	PostgresqlConfig11_LOG_STATEMENT_ALL         PostgresqlConfig11_LogStatement = 4
)

var PostgresqlConfig11_LogStatement_name = map[int32]string{
	0: "LOG_STATEMENT_UNSPECIFIED",
	1: "LOG_STATEMENT_NONE",
	2: "LOG_STATEMENT_DDL",
	3: "LOG_STATEMENT_MOD",
	4: "LOG_STATEMENT_ALL",
}

var PostgresqlConfig11_LogStatement_value = map[string]int32{
	"LOG_STATEMENT_UNSPECIFIED": 0,
	"LOG_STATEMENT_NONE":        1,
	"LOG_STATEMENT_DDL":         2,
	"LOG_STATEMENT_MOD":         3,
	"LOG_STATEMENT_ALL":         4,
}

func (x PostgresqlConfig11_LogStatement) String() string {
	return proto.EnumName(PostgresqlConfig11_LogStatement_name, int32(x))
}

func (PostgresqlConfig11_LogStatement) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7f28b14e19e1f835, []int{0, 6}
}

type PostgresqlConfig11_TransactionIsolation int32

const (
	PostgresqlConfig11_TRANSACTION_ISOLATION_UNSPECIFIED      PostgresqlConfig11_TransactionIsolation = 0
	PostgresqlConfig11_TRANSACTION_ISOLATION_READ_UNCOMMITTED PostgresqlConfig11_TransactionIsolation = 1
	PostgresqlConfig11_TRANSACTION_ISOLATION_READ_COMMITTED   PostgresqlConfig11_TransactionIsolation = 2
	PostgresqlConfig11_TRANSACTION_ISOLATION_REPEATABLE_READ  PostgresqlConfig11_TransactionIsolation = 3
	PostgresqlConfig11_TRANSACTION_ISOLATION_SERIALIZABLE     PostgresqlConfig11_TransactionIsolation = 4
)

var PostgresqlConfig11_TransactionIsolation_name = map[int32]string{
	0: "TRANSACTION_ISOLATION_UNSPECIFIED",
	1: "TRANSACTION_ISOLATION_READ_UNCOMMITTED",
	2: "TRANSACTION_ISOLATION_READ_COMMITTED",
	3: "TRANSACTION_ISOLATION_REPEATABLE_READ",
	4: "TRANSACTION_ISOLATION_SERIALIZABLE",
}

var PostgresqlConfig11_TransactionIsolation_value = map[string]int32{
	"TRANSACTION_ISOLATION_UNSPECIFIED":      0,
	"TRANSACTION_ISOLATION_READ_UNCOMMITTED": 1,
	"TRANSACTION_ISOLATION_READ_COMMITTED":   2,
	"TRANSACTION_ISOLATION_REPEATABLE_READ":  3,
	"TRANSACTION_ISOLATION_SERIALIZABLE":     4,
}

func (x PostgresqlConfig11_TransactionIsolation) String() string {
	return proto.EnumName(PostgresqlConfig11_TransactionIsolation_name, int32(x))
}

func (PostgresqlConfig11_TransactionIsolation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7f28b14e19e1f835, []int{0, 7}
}

type PostgresqlConfig11_ByteaOutput int32

const (
	PostgresqlConfig11_BYTEA_OUTPUT_UNSPECIFIED PostgresqlConfig11_ByteaOutput = 0
	PostgresqlConfig11_BYTEA_OUTPUT_HEX         PostgresqlConfig11_ByteaOutput = 1
	PostgresqlConfig11_BYTEA_OUTPUT_ESCAPED     PostgresqlConfig11_ByteaOutput = 2
)

var PostgresqlConfig11_ByteaOutput_name = map[int32]string{
	0: "BYTEA_OUTPUT_UNSPECIFIED",
	1: "BYTEA_OUTPUT_HEX",
	2: "BYTEA_OUTPUT_ESCAPED",
}

var PostgresqlConfig11_ByteaOutput_value = map[string]int32{
	"BYTEA_OUTPUT_UNSPECIFIED": 0,
	"BYTEA_OUTPUT_HEX":         1,
	"BYTEA_OUTPUT_ESCAPED":     2,
}

func (x PostgresqlConfig11_ByteaOutput) String() string {
	return proto.EnumName(PostgresqlConfig11_ByteaOutput_name, int32(x))
}

func (PostgresqlConfig11_ByteaOutput) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7f28b14e19e1f835, []int{0, 8}
}

type PostgresqlConfig11_XmlBinary int32

const (
	PostgresqlConfig11_XML_BINARY_UNSPECIFIED PostgresqlConfig11_XmlBinary = 0
	PostgresqlConfig11_XML_BINARY_BASE64      PostgresqlConfig11_XmlBinary = 1
	PostgresqlConfig11_XML_BINARY_HEX         PostgresqlConfig11_XmlBinary = 2
)

var PostgresqlConfig11_XmlBinary_name = map[int32]string{
	0: "XML_BINARY_UNSPECIFIED",
	1: "XML_BINARY_BASE64",
	2: "XML_BINARY_HEX",
}

var PostgresqlConfig11_XmlBinary_value = map[string]int32{
	"XML_BINARY_UNSPECIFIED": 0,
	"XML_BINARY_BASE64":      1,
	"XML_BINARY_HEX":         2,
}

func (x PostgresqlConfig11_XmlBinary) String() string {
	return proto.EnumName(PostgresqlConfig11_XmlBinary_name, int32(x))
}

func (PostgresqlConfig11_XmlBinary) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7f28b14e19e1f835, []int{0, 9}
}

type PostgresqlConfig11_XmlOption int32

const (
	PostgresqlConfig11_XML_OPTION_UNSPECIFIED PostgresqlConfig11_XmlOption = 0
	PostgresqlConfig11_XML_OPTION_DOCUMENT    PostgresqlConfig11_XmlOption = 1
	PostgresqlConfig11_XML_OPTION_CONTENT     PostgresqlConfig11_XmlOption = 2
)

var PostgresqlConfig11_XmlOption_name = map[int32]string{
	0: "XML_OPTION_UNSPECIFIED",
	1: "XML_OPTION_DOCUMENT",
	2: "XML_OPTION_CONTENT",
}

var PostgresqlConfig11_XmlOption_value = map[string]int32{
	"XML_OPTION_UNSPECIFIED": 0,
	"XML_OPTION_DOCUMENT":    1,
	"XML_OPTION_CONTENT":     2,
}

func (x PostgresqlConfig11_XmlOption) String() string {
	return proto.EnumName(PostgresqlConfig11_XmlOption_name, int32(x))
}

func (PostgresqlConfig11_XmlOption) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7f28b14e19e1f835, []int{0, 10}
}

type PostgresqlConfig11_BackslashQuote int32

const (
	PostgresqlConfig11_BACKSLASH_QUOTE_UNSPECIFIED   PostgresqlConfig11_BackslashQuote = 0
	PostgresqlConfig11_BACKSLASH_QUOTE               PostgresqlConfig11_BackslashQuote = 1
	PostgresqlConfig11_BACKSLASH_QUOTE_ON            PostgresqlConfig11_BackslashQuote = 2
	PostgresqlConfig11_BACKSLASH_QUOTE_OFF           PostgresqlConfig11_BackslashQuote = 3
	PostgresqlConfig11_BACKSLASH_QUOTE_SAFE_ENCODING PostgresqlConfig11_BackslashQuote = 4
)

var PostgresqlConfig11_BackslashQuote_name = map[int32]string{
	0: "BACKSLASH_QUOTE_UNSPECIFIED",
	1: "BACKSLASH_QUOTE",
	2: "BACKSLASH_QUOTE_ON",
	3: "BACKSLASH_QUOTE_OFF",
	4: "BACKSLASH_QUOTE_SAFE_ENCODING",
}

var PostgresqlConfig11_BackslashQuote_value = map[string]int32{
	"BACKSLASH_QUOTE_UNSPECIFIED":   0,
	"BACKSLASH_QUOTE":               1,
	"BACKSLASH_QUOTE_ON":            2,
	"BACKSLASH_QUOTE_OFF":           3,
	"BACKSLASH_QUOTE_SAFE_ENCODING": 4,
}

func (x PostgresqlConfig11_BackslashQuote) String() string {
	return proto.EnumName(PostgresqlConfig11_BackslashQuote_name, int32(x))
}

func (PostgresqlConfig11_BackslashQuote) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7f28b14e19e1f835, []int{0, 11}
}

type PostgresqlConfig11_PgHintPlanDebugPrint int32

const (
	PostgresqlConfig11_PG_HINT_PLAN_DEBUG_PRINT_UNSPECIFIED PostgresqlConfig11_PgHintPlanDebugPrint = 0
	PostgresqlConfig11_PG_HINT_PLAN_DEBUG_PRINT_OFF         PostgresqlConfig11_PgHintPlanDebugPrint = 1
	PostgresqlConfig11_PG_HINT_PLAN_DEBUG_PRINT_ON          PostgresqlConfig11_PgHintPlanDebugPrint = 2
	PostgresqlConfig11_PG_HINT_PLAN_DEBUG_PRINT_DETAILED    PostgresqlConfig11_PgHintPlanDebugPrint = 3
	PostgresqlConfig11_PG_HINT_PLAN_DEBUG_PRINT_VERBOSE     PostgresqlConfig11_PgHintPlanDebugPrint = 4
)

var PostgresqlConfig11_PgHintPlanDebugPrint_name = map[int32]string{
	0: "PG_HINT_PLAN_DEBUG_PRINT_UNSPECIFIED",
	1: "PG_HINT_PLAN_DEBUG_PRINT_OFF",
	2: "PG_HINT_PLAN_DEBUG_PRINT_ON",
	3: "PG_HINT_PLAN_DEBUG_PRINT_DETAILED",
	4: "PG_HINT_PLAN_DEBUG_PRINT_VERBOSE",
}

var PostgresqlConfig11_PgHintPlanDebugPrint_value = map[string]int32{
	"PG_HINT_PLAN_DEBUG_PRINT_UNSPECIFIED": 0,
	"PG_HINT_PLAN_DEBUG_PRINT_OFF":         1,
	"PG_HINT_PLAN_DEBUG_PRINT_ON":          2,
	"PG_HINT_PLAN_DEBUG_PRINT_DETAILED":    3,
	"PG_HINT_PLAN_DEBUG_PRINT_VERBOSE":     4,
}

func (x PostgresqlConfig11_PgHintPlanDebugPrint) String() string {
	return proto.EnumName(PostgresqlConfig11_PgHintPlanDebugPrint_name, int32(x))
}

func (PostgresqlConfig11_PgHintPlanDebugPrint) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7f28b14e19e1f835, []int{0, 12}
}

type PostgresqlConfig11_SharedPreloadLibraries int32

const (
	PostgresqlConfig11_SHARED_PRELOAD_LIBRARIES_UNSPECIFIED  PostgresqlConfig11_SharedPreloadLibraries = 0
	PostgresqlConfig11_SHARED_PRELOAD_LIBRARIES_AUTO_EXPLAIN PostgresqlConfig11_SharedPreloadLibraries = 1
	PostgresqlConfig11_SHARED_PRELOAD_LIBRARIES_PG_HINT_PLAN PostgresqlConfig11_SharedPreloadLibraries = 2
)

var PostgresqlConfig11_SharedPreloadLibraries_name = map[int32]string{
	0: "SHARED_PRELOAD_LIBRARIES_UNSPECIFIED",
	1: "SHARED_PRELOAD_LIBRARIES_AUTO_EXPLAIN",
	2: "SHARED_PRELOAD_LIBRARIES_PG_HINT_PLAN",
}

var PostgresqlConfig11_SharedPreloadLibraries_value = map[string]int32{
	"SHARED_PRELOAD_LIBRARIES_UNSPECIFIED":  0,
	"SHARED_PRELOAD_LIBRARIES_AUTO_EXPLAIN": 1,
	"SHARED_PRELOAD_LIBRARIES_PG_HINT_PLAN": 2,
}

func (x PostgresqlConfig11_SharedPreloadLibraries) String() string {
	return proto.EnumName(PostgresqlConfig11_SharedPreloadLibraries_name, int32(x))
}

func (PostgresqlConfig11_SharedPreloadLibraries) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7f28b14e19e1f835, []int{0, 13}
}

// Options and structure of `PostgresqlConfig` reflects PostgreSQL configuration file
// parameters which detailed description is available in
// [PostgreSQL documentation](https://www.postgresql.org/docs/11/runtime-config.html).
type PostgresqlConfig11 struct {
	MaxConnections                  *wrappers.Int64Value                        `protobuf:"bytes,1,opt,name=max_connections,json=maxConnections,proto3" json:"max_connections,omitempty"`
	SharedBuffers                   *wrappers.Int64Value                        `protobuf:"bytes,2,opt,name=shared_buffers,json=sharedBuffers,proto3" json:"shared_buffers,omitempty"`
	TempBuffers                     *wrappers.Int64Value                        `protobuf:"bytes,3,opt,name=temp_buffers,json=tempBuffers,proto3" json:"temp_buffers,omitempty"`
	MaxPreparedTransactions         *wrappers.Int64Value                        `protobuf:"bytes,4,opt,name=max_prepared_transactions,json=maxPreparedTransactions,proto3" json:"max_prepared_transactions,omitempty"`
	WorkMem                         *wrappers.Int64Value                        `protobuf:"bytes,5,opt,name=work_mem,json=workMem,proto3" json:"work_mem,omitempty"`
	MaintenanceWorkMem              *wrappers.Int64Value                        `protobuf:"bytes,6,opt,name=maintenance_work_mem,json=maintenanceWorkMem,proto3" json:"maintenance_work_mem,omitempty"`
	AutovacuumWorkMem               *wrappers.Int64Value                        `protobuf:"bytes,7,opt,name=autovacuum_work_mem,json=autovacuumWorkMem,proto3" json:"autovacuum_work_mem,omitempty"`
	TempFileLimit                   *wrappers.Int64Value                        `protobuf:"bytes,8,opt,name=temp_file_limit,json=tempFileLimit,proto3" json:"temp_file_limit,omitempty"`
	VacuumCostDelay                 *wrappers.Int64Value                        `protobuf:"bytes,9,opt,name=vacuum_cost_delay,json=vacuumCostDelay,proto3" json:"vacuum_cost_delay,omitempty"`
	VacuumCostPageHit               *wrappers.Int64Value                        `protobuf:"bytes,10,opt,name=vacuum_cost_page_hit,json=vacuumCostPageHit,proto3" json:"vacuum_cost_page_hit,omitempty"`
	VacuumCostPageMiss              *wrappers.Int64Value                        `protobuf:"bytes,11,opt,name=vacuum_cost_page_miss,json=vacuumCostPageMiss,proto3" json:"vacuum_cost_page_miss,omitempty"`
	VacuumCostPageDirty             *wrappers.Int64Value                        `protobuf:"bytes,12,opt,name=vacuum_cost_page_dirty,json=vacuumCostPageDirty,proto3" json:"vacuum_cost_page_dirty,omitempty"`
	VacuumCostLimit                 *wrappers.Int64Value                        `protobuf:"bytes,13,opt,name=vacuum_cost_limit,json=vacuumCostLimit,proto3" json:"vacuum_cost_limit,omitempty"`
	BgwriterDelay                   *wrappers.Int64Value                        `protobuf:"bytes,14,opt,name=bgwriter_delay,json=bgwriterDelay,proto3" json:"bgwriter_delay,omitempty"`
	BgwriterLruMaxpages             *wrappers.Int64Value                        `protobuf:"bytes,15,opt,name=bgwriter_lru_maxpages,json=bgwriterLruMaxpages,proto3" json:"bgwriter_lru_maxpages,omitempty"`
	BgwriterLruMultiplier           *wrappers.DoubleValue                       `protobuf:"bytes,16,opt,name=bgwriter_lru_multiplier,json=bgwriterLruMultiplier,proto3" json:"bgwriter_lru_multiplier,omitempty"`
	BgwriterFlushAfter              *wrappers.Int64Value                        `protobuf:"bytes,17,opt,name=bgwriter_flush_after,json=bgwriterFlushAfter,proto3" json:"bgwriter_flush_after,omitempty"`
	BackendFlushAfter               *wrappers.Int64Value                        `protobuf:"bytes,18,opt,name=backend_flush_after,json=backendFlushAfter,proto3" json:"backend_flush_after,omitempty"`
	OldSnapshotThreshold            *wrappers.Int64Value                        `protobuf:"bytes,19,opt,name=old_snapshot_threshold,json=oldSnapshotThreshold,proto3" json:"old_snapshot_threshold,omitempty"`
	WalLevel                        PostgresqlConfig11_WalLevel                 `protobuf:"varint,20,opt,name=wal_level,json=walLevel,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_WalLevel" json:"wal_level,omitempty"`
	SynchronousCommit               PostgresqlConfig11_SynchronousCommit        `protobuf:"varint,21,opt,name=synchronous_commit,json=synchronousCommit,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_SynchronousCommit" json:"synchronous_commit,omitempty"`
	CheckpointTimeout               *wrappers.Int64Value                        `protobuf:"bytes,22,opt,name=checkpoint_timeout,json=checkpointTimeout,proto3" json:"checkpoint_timeout,omitempty"`
	CheckpointCompletionTarget      *wrappers.DoubleValue                       `protobuf:"bytes,23,opt,name=checkpoint_completion_target,json=checkpointCompletionTarget,proto3" json:"checkpoint_completion_target,omitempty"`
	CheckpointFlushAfter            *wrappers.Int64Value                        `protobuf:"bytes,24,opt,name=checkpoint_flush_after,json=checkpointFlushAfter,proto3" json:"checkpoint_flush_after,omitempty"`
	MaxWalSize                      *wrappers.Int64Value                        `protobuf:"bytes,25,opt,name=max_wal_size,json=maxWalSize,proto3" json:"max_wal_size,omitempty"`
	MinWalSize                      *wrappers.Int64Value                        `protobuf:"bytes,26,opt,name=min_wal_size,json=minWalSize,proto3" json:"min_wal_size,omitempty"`
	MaxStandbyStreamingDelay        *wrappers.Int64Value                        `protobuf:"bytes,27,opt,name=max_standby_streaming_delay,json=maxStandbyStreamingDelay,proto3" json:"max_standby_streaming_delay,omitempty"`
	DefaultStatisticsTarget         *wrappers.Int64Value                        `protobuf:"bytes,28,opt,name=default_statistics_target,json=defaultStatisticsTarget,proto3" json:"default_statistics_target,omitempty"`
	ConstraintExclusion             PostgresqlConfig11_ConstraintExclusion      `protobuf:"varint,29,opt,name=constraint_exclusion,json=constraintExclusion,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_ConstraintExclusion" json:"constraint_exclusion,omitempty"`
	CursorTupleFraction             *wrappers.DoubleValue                       `protobuf:"bytes,30,opt,name=cursor_tuple_fraction,json=cursorTupleFraction,proto3" json:"cursor_tuple_fraction,omitempty"`
	FromCollapseLimit               *wrappers.Int64Value                        `protobuf:"bytes,31,opt,name=from_collapse_limit,json=fromCollapseLimit,proto3" json:"from_collapse_limit,omitempty"`
	JoinCollapseLimit               *wrappers.Int64Value                        `protobuf:"bytes,32,opt,name=join_collapse_limit,json=joinCollapseLimit,proto3" json:"join_collapse_limit,omitempty"`
	ForceParallelMode               PostgresqlConfig11_ForceParallelMode        `protobuf:"varint,33,opt,name=force_parallel_mode,json=forceParallelMode,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_ForceParallelMode" json:"force_parallel_mode,omitempty"`
	ClientMinMessages               PostgresqlConfig11_LogLevel                 `protobuf:"varint,34,opt,name=client_min_messages,json=clientMinMessages,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_LogLevel" json:"client_min_messages,omitempty"`
	LogMinMessages                  PostgresqlConfig11_LogLevel                 `protobuf:"varint,35,opt,name=log_min_messages,json=logMinMessages,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_LogLevel" json:"log_min_messages,omitempty"`
	LogMinErrorStatement            PostgresqlConfig11_LogLevel                 `protobuf:"varint,36,opt,name=log_min_error_statement,json=logMinErrorStatement,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_LogLevel" json:"log_min_error_statement,omitempty"`
	LogMinDurationStatement         *wrappers.Int64Value                        `protobuf:"bytes,37,opt,name=log_min_duration_statement,json=logMinDurationStatement,proto3" json:"log_min_duration_statement,omitempty"`
	LogCheckpoints                  *wrappers.BoolValue                         `protobuf:"bytes,38,opt,name=log_checkpoints,json=logCheckpoints,proto3" json:"log_checkpoints,omitempty"`
	LogConnections                  *wrappers.BoolValue                         `protobuf:"bytes,39,opt,name=log_connections,json=logConnections,proto3" json:"log_connections,omitempty"`
	LogDisconnections               *wrappers.BoolValue                         `protobuf:"bytes,40,opt,name=log_disconnections,json=logDisconnections,proto3" json:"log_disconnections,omitempty"`
	LogDuration                     *wrappers.BoolValue                         `protobuf:"bytes,41,opt,name=log_duration,json=logDuration,proto3" json:"log_duration,omitempty"`
	LogErrorVerbosity               PostgresqlConfig11_LogErrorVerbosity        `protobuf:"varint,42,opt,name=log_error_verbosity,json=logErrorVerbosity,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_LogErrorVerbosity" json:"log_error_verbosity,omitempty"`
	LogLockWaits                    *wrappers.BoolValue                         `protobuf:"bytes,43,opt,name=log_lock_waits,json=logLockWaits,proto3" json:"log_lock_waits,omitempty"`
	LogStatement                    PostgresqlConfig11_LogStatement             `protobuf:"varint,44,opt,name=log_statement,json=logStatement,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_LogStatement" json:"log_statement,omitempty"`
	LogTempFiles                    *wrappers.Int64Value                        `protobuf:"bytes,45,opt,name=log_temp_files,json=logTempFiles,proto3" json:"log_temp_files,omitempty"`
	SearchPath                      string                                      `protobuf:"bytes,46,opt,name=search_path,json=searchPath,proto3" json:"search_path,omitempty"`
	RowSecurity                     *wrappers.BoolValue                         `protobuf:"bytes,47,opt,name=row_security,json=rowSecurity,proto3" json:"row_security,omitempty"`
	DefaultTransactionIsolation     PostgresqlConfig11_TransactionIsolation     `protobuf:"varint,48,opt,name=default_transaction_isolation,json=defaultTransactionIsolation,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_TransactionIsolation" json:"default_transaction_isolation,omitempty"`
	StatementTimeout                *wrappers.Int64Value                        `protobuf:"bytes,49,opt,name=statement_timeout,json=statementTimeout,proto3" json:"statement_timeout,omitempty"`
	LockTimeout                     *wrappers.Int64Value                        `protobuf:"bytes,50,opt,name=lock_timeout,json=lockTimeout,proto3" json:"lock_timeout,omitempty"`
	IdleInTransactionSessionTimeout *wrappers.Int64Value                        `protobuf:"bytes,51,opt,name=idle_in_transaction_session_timeout,json=idleInTransactionSessionTimeout,proto3" json:"idle_in_transaction_session_timeout,omitempty"`
	ByteaOutput                     PostgresqlConfig11_ByteaOutput              `protobuf:"varint,52,opt,name=bytea_output,json=byteaOutput,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_ByteaOutput" json:"bytea_output,omitempty"`
	Xmlbinary                       PostgresqlConfig11_XmlBinary                `protobuf:"varint,53,opt,name=xmlbinary,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_XmlBinary" json:"xmlbinary,omitempty"`
	Xmloption                       PostgresqlConfig11_XmlOption                `protobuf:"varint,54,opt,name=xmloption,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_XmlOption" json:"xmloption,omitempty"`
	GinPendingListLimit             *wrappers.Int64Value                        `protobuf:"bytes,55,opt,name=gin_pending_list_limit,json=ginPendingListLimit,proto3" json:"gin_pending_list_limit,omitempty"`
	DeadlockTimeout                 *wrappers.Int64Value                        `protobuf:"bytes,56,opt,name=deadlock_timeout,json=deadlockTimeout,proto3" json:"deadlock_timeout,omitempty"`
	MaxLocksPerTransaction          *wrappers.Int64Value                        `protobuf:"bytes,57,opt,name=max_locks_per_transaction,json=maxLocksPerTransaction,proto3" json:"max_locks_per_transaction,omitempty"`
	MaxPredLocksPerTransaction      *wrappers.Int64Value                        `protobuf:"bytes,58,opt,name=max_pred_locks_per_transaction,json=maxPredLocksPerTransaction,proto3" json:"max_pred_locks_per_transaction,omitempty"`
	ArrayNulls                      *wrappers.BoolValue                         `protobuf:"bytes,59,opt,name=array_nulls,json=arrayNulls,proto3" json:"array_nulls,omitempty"`
	BackslashQuote                  PostgresqlConfig11_BackslashQuote           `protobuf:"varint,60,opt,name=backslash_quote,json=backslashQuote,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_BackslashQuote" json:"backslash_quote,omitempty"`
	DefaultWithOids                 *wrappers.BoolValue                         `protobuf:"bytes,61,opt,name=default_with_oids,json=defaultWithOids,proto3" json:"default_with_oids,omitempty"`
	EscapeStringWarning             *wrappers.BoolValue                         `protobuf:"bytes,62,opt,name=escape_string_warning,json=escapeStringWarning,proto3" json:"escape_string_warning,omitempty"`
	LoCompatPrivileges              *wrappers.BoolValue                         `protobuf:"bytes,63,opt,name=lo_compat_privileges,json=loCompatPrivileges,proto3" json:"lo_compat_privileges,omitempty"`
	OperatorPrecedenceWarning       *wrappers.BoolValue                         `protobuf:"bytes,64,opt,name=operator_precedence_warning,json=operatorPrecedenceWarning,proto3" json:"operator_precedence_warning,omitempty"`
	QuoteAllIdentifiers             *wrappers.BoolValue                         `protobuf:"bytes,65,opt,name=quote_all_identifiers,json=quoteAllIdentifiers,proto3" json:"quote_all_identifiers,omitempty"`
	StandardConformingStrings       *wrappers.BoolValue                         `protobuf:"bytes,66,opt,name=standard_conforming_strings,json=standardConformingStrings,proto3" json:"standard_conforming_strings,omitempty"`
	SynchronizeSeqscans             *wrappers.BoolValue                         `protobuf:"bytes,67,opt,name=synchronize_seqscans,json=synchronizeSeqscans,proto3" json:"synchronize_seqscans,omitempty"`
	TransformNullEquals             *wrappers.BoolValue                         `protobuf:"bytes,68,opt,name=transform_null_equals,json=transformNullEquals,proto3" json:"transform_null_equals,omitempty"`
	ExitOnError                     *wrappers.BoolValue                         `protobuf:"bytes,69,opt,name=exit_on_error,json=exitOnError,proto3" json:"exit_on_error,omitempty"`
	SeqPageCost                     *wrappers.DoubleValue                       `protobuf:"bytes,70,opt,name=seq_page_cost,json=seqPageCost,proto3" json:"seq_page_cost,omitempty"`
	RandomPageCost                  *wrappers.DoubleValue                       `protobuf:"bytes,71,opt,name=random_page_cost,json=randomPageCost,proto3" json:"random_page_cost,omitempty"`
	AutovacuumMaxWorkers            *wrappers.Int64Value                        `protobuf:"bytes,72,opt,name=autovacuum_max_workers,json=autovacuumMaxWorkers,proto3" json:"autovacuum_max_workers,omitempty"`
	AutovacuumVacuumCostDelay       *wrappers.Int64Value                        `protobuf:"bytes,73,opt,name=autovacuum_vacuum_cost_delay,json=autovacuumVacuumCostDelay,proto3" json:"autovacuum_vacuum_cost_delay,omitempty"`
	AutovacuumVacuumCostLimit       *wrappers.Int64Value                        `protobuf:"bytes,74,opt,name=autovacuum_vacuum_cost_limit,json=autovacuumVacuumCostLimit,proto3" json:"autovacuum_vacuum_cost_limit,omitempty"`
	AutovacuumNaptime               *wrappers.Int64Value                        `protobuf:"bytes,75,opt,name=autovacuum_naptime,json=autovacuumNaptime,proto3" json:"autovacuum_naptime,omitempty"`
	ArchiveTimeout                  *wrappers.Int64Value                        `protobuf:"bytes,76,opt,name=archive_timeout,json=archiveTimeout,proto3" json:"archive_timeout,omitempty"`
	TrackActivityQuerySize          *wrappers.Int64Value                        `protobuf:"bytes,77,opt,name=track_activity_query_size,json=trackActivityQuerySize,proto3" json:"track_activity_query_size,omitempty"`
	EnableBitmapscan                *wrappers.BoolValue                         `protobuf:"bytes,80,opt,name=enable_bitmapscan,json=enableBitmapscan,proto3" json:"enable_bitmapscan,omitempty"`
	EnableHashagg                   *wrappers.BoolValue                         `protobuf:"bytes,81,opt,name=enable_hashagg,json=enableHashagg,proto3" json:"enable_hashagg,omitempty"`
	EnableHashjoin                  *wrappers.BoolValue                         `protobuf:"bytes,82,opt,name=enable_hashjoin,json=enableHashjoin,proto3" json:"enable_hashjoin,omitempty"`
	EnableIndexscan                 *wrappers.BoolValue                         `protobuf:"bytes,83,opt,name=enable_indexscan,json=enableIndexscan,proto3" json:"enable_indexscan,omitempty"`
	EnableIndexonlyscan             *wrappers.BoolValue                         `protobuf:"bytes,84,opt,name=enable_indexonlyscan,json=enableIndexonlyscan,proto3" json:"enable_indexonlyscan,omitempty"`
	EnableMaterial                  *wrappers.BoolValue                         `protobuf:"bytes,85,opt,name=enable_material,json=enableMaterial,proto3" json:"enable_material,omitempty"`
	EnableMergejoin                 *wrappers.BoolValue                         `protobuf:"bytes,86,opt,name=enable_mergejoin,json=enableMergejoin,proto3" json:"enable_mergejoin,omitempty"`
	EnableNestloop                  *wrappers.BoolValue                         `protobuf:"bytes,87,opt,name=enable_nestloop,json=enableNestloop,proto3" json:"enable_nestloop,omitempty"`
	EnableSeqscan                   *wrappers.BoolValue                         `protobuf:"bytes,88,opt,name=enable_seqscan,json=enableSeqscan,proto3" json:"enable_seqscan,omitempty"`
	EnableSort                      *wrappers.BoolValue                         `protobuf:"bytes,89,opt,name=enable_sort,json=enableSort,proto3" json:"enable_sort,omitempty"`
	EnableTidscan                   *wrappers.BoolValue                         `protobuf:"bytes,90,opt,name=enable_tidscan,json=enableTidscan,proto3" json:"enable_tidscan,omitempty"`
	MaxWorkerProcesses              *wrappers.Int64Value                        `protobuf:"bytes,91,opt,name=max_worker_processes,json=maxWorkerProcesses,proto3" json:"max_worker_processes,omitempty"`
	MaxParallelWorkers              *wrappers.Int64Value                        `protobuf:"bytes,92,opt,name=max_parallel_workers,json=maxParallelWorkers,proto3" json:"max_parallel_workers,omitempty"`
	MaxParallelWorkersPerGather     *wrappers.Int64Value                        `protobuf:"bytes,93,opt,name=max_parallel_workers_per_gather,json=maxParallelWorkersPerGather,proto3" json:"max_parallel_workers_per_gather,omitempty"`
	AutovacuumVacuumScaleFactor     *wrappers.DoubleValue                       `protobuf:"bytes,94,opt,name=autovacuum_vacuum_scale_factor,json=autovacuumVacuumScaleFactor,proto3" json:"autovacuum_vacuum_scale_factor,omitempty"`
	AutovacuumAnalyzeScaleFactor    *wrappers.DoubleValue                       `protobuf:"bytes,95,opt,name=autovacuum_analyze_scale_factor,json=autovacuumAnalyzeScaleFactor,proto3" json:"autovacuum_analyze_scale_factor,omitempty"`
	DefaultTransactionReadOnly      *wrappers.BoolValue                         `protobuf:"bytes,96,opt,name=default_transaction_read_only,json=defaultTransactionReadOnly,proto3" json:"default_transaction_read_only,omitempty"`
	Timezone                        string                                      `protobuf:"bytes,97,opt,name=timezone,proto3" json:"timezone,omitempty"`
	EnableParallelAppend            *wrappers.BoolValue                         `protobuf:"bytes,98,opt,name=enable_parallel_append,json=enableParallelAppend,proto3" json:"enable_parallel_append,omitempty"`
	EnableParallelHash              *wrappers.BoolValue                         `protobuf:"bytes,99,opt,name=enable_parallel_hash,json=enableParallelHash,proto3" json:"enable_parallel_hash,omitempty"`
	EnablePartitionPruning          *wrappers.BoolValue                         `protobuf:"bytes,100,opt,name=enable_partition_pruning,json=enablePartitionPruning,proto3" json:"enable_partition_pruning,omitempty"`
	EnablePartitionwiseAggregate    *wrappers.BoolValue                         `protobuf:"bytes,101,opt,name=enable_partitionwise_aggregate,json=enablePartitionwiseAggregate,proto3" json:"enable_partitionwise_aggregate,omitempty"`
	EnablePartitionwiseJoin         *wrappers.BoolValue                         `protobuf:"bytes,102,opt,name=enable_partitionwise_join,json=enablePartitionwiseJoin,proto3" json:"enable_partitionwise_join,omitempty"`
	Jit                             *wrappers.BoolValue                         `protobuf:"bytes,103,opt,name=jit,proto3" json:"jit,omitempty"`
	MaxParallelMaintenanceWorkers   *wrappers.Int64Value                        `protobuf:"bytes,104,opt,name=max_parallel_maintenance_workers,json=maxParallelMaintenanceWorkers,proto3" json:"max_parallel_maintenance_workers,omitempty"`
	ParallelLeaderParticipation     *wrappers.BoolValue                         `protobuf:"bytes,105,opt,name=parallel_leader_participation,json=parallelLeaderParticipation,proto3" json:"parallel_leader_participation,omitempty"`
	VacuumCleanupIndexScaleFactor   *wrappers.DoubleValue                       `protobuf:"bytes,106,opt,name=vacuum_cleanup_index_scale_factor,json=vacuumCleanupIndexScaleFactor,proto3" json:"vacuum_cleanup_index_scale_factor,omitempty"`
	EffectiveIoConcurrency          *wrappers.Int64Value                        `protobuf:"bytes,107,opt,name=effective_io_concurrency,json=effectiveIoConcurrency,proto3" json:"effective_io_concurrency,omitempty"`
	EffectiveCacheSize              *wrappers.Int64Value                        `protobuf:"bytes,108,opt,name=effective_cache_size,json=effectiveCacheSize,proto3" json:"effective_cache_size,omitempty"`
	SharedPreloadLibraries          []PostgresqlConfig11_SharedPreloadLibraries `protobuf:"varint,109,rep,packed,name=shared_preload_libraries,json=sharedPreloadLibraries,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_SharedPreloadLibraries" json:"shared_preload_libraries,omitempty"`
	AutoExplainLogMinDuration       *wrappers.Int64Value                        `protobuf:"bytes,110,opt,name=auto_explain_log_min_duration,json=autoExplainLogMinDuration,proto3" json:"auto_explain_log_min_duration,omitempty"`
	AutoExplainLogAnalyze           *wrappers.BoolValue                         `protobuf:"bytes,111,opt,name=auto_explain_log_analyze,json=autoExplainLogAnalyze,proto3" json:"auto_explain_log_analyze,omitempty"`
	AutoExplainLogBuffers           *wrappers.BoolValue                         `protobuf:"bytes,112,opt,name=auto_explain_log_buffers,json=autoExplainLogBuffers,proto3" json:"auto_explain_log_buffers,omitempty"`
	AutoExplainLogTiming            *wrappers.BoolValue                         `protobuf:"bytes,113,opt,name=auto_explain_log_timing,json=autoExplainLogTiming,proto3" json:"auto_explain_log_timing,omitempty"`
	AutoExplainLogTriggers          *wrappers.BoolValue                         `protobuf:"bytes,114,opt,name=auto_explain_log_triggers,json=autoExplainLogTriggers,proto3" json:"auto_explain_log_triggers,omitempty"`
	AutoExplainLogVerbose           *wrappers.BoolValue                         `protobuf:"bytes,115,opt,name=auto_explain_log_verbose,json=autoExplainLogVerbose,proto3" json:"auto_explain_log_verbose,omitempty"`
	AutoExplainLogNestedStatements  *wrappers.BoolValue                         `protobuf:"bytes,116,opt,name=auto_explain_log_nested_statements,json=autoExplainLogNestedStatements,proto3" json:"auto_explain_log_nested_statements,omitempty"`
	AutoExplainSampleRate           *wrappers.DoubleValue                       `protobuf:"bytes,117,opt,name=auto_explain_sample_rate,json=autoExplainSampleRate,proto3" json:"auto_explain_sample_rate,omitempty"`
	PgHintPlanEnableHint            *wrappers.BoolValue                         `protobuf:"bytes,118,opt,name=pg_hint_plan_enable_hint,json=pgHintPlanEnableHint,proto3" json:"pg_hint_plan_enable_hint,omitempty"`
	PgHintPlanEnableHintTable       *wrappers.BoolValue                         `protobuf:"bytes,119,opt,name=pg_hint_plan_enable_hint_table,json=pgHintPlanEnableHintTable,proto3" json:"pg_hint_plan_enable_hint_table,omitempty"`
	PgHintPlanDebugPrint            PostgresqlConfig11_PgHintPlanDebugPrint     `protobuf:"varint,120,opt,name=pg_hint_plan_debug_print,json=pgHintPlanDebugPrint,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_PgHintPlanDebugPrint" json:"pg_hint_plan_debug_print,omitempty"`
	PgHintPlanMessageLevel          PostgresqlConfig11_LogLevel                 `protobuf:"varint,121,opt,name=pg_hint_plan_message_level,json=pgHintPlanMessageLevel,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_LogLevel" json:"pg_hint_plan_message_level,omitempty"`
	XXX_NoUnkeyedLiteral            struct{}                                    `json:"-"`
	XXX_unrecognized                []byte                                      `json:"-"`
	XXX_sizecache                   int32                                       `json:"-"`
}

func (m *PostgresqlConfig11) Reset()         { *m = PostgresqlConfig11{} }
func (m *PostgresqlConfig11) String() string { return proto.CompactTextString(m) }
func (*PostgresqlConfig11) ProtoMessage()    {}
func (*PostgresqlConfig11) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f28b14e19e1f835, []int{0}
}

func (m *PostgresqlConfig11) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostgresqlConfig11.Unmarshal(m, b)
}
func (m *PostgresqlConfig11) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostgresqlConfig11.Marshal(b, m, deterministic)
}
func (m *PostgresqlConfig11) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostgresqlConfig11.Merge(m, src)
}
func (m *PostgresqlConfig11) XXX_Size() int {
	return xxx_messageInfo_PostgresqlConfig11.Size(m)
}
func (m *PostgresqlConfig11) XXX_DiscardUnknown() {
	xxx_messageInfo_PostgresqlConfig11.DiscardUnknown(m)
}

var xxx_messageInfo_PostgresqlConfig11 proto.InternalMessageInfo

func (m *PostgresqlConfig11) GetMaxConnections() *wrappers.Int64Value {
	if m != nil {
		return m.MaxConnections
	}
	return nil
}

func (m *PostgresqlConfig11) GetSharedBuffers() *wrappers.Int64Value {
	if m != nil {
		return m.SharedBuffers
	}
	return nil
}

func (m *PostgresqlConfig11) GetTempBuffers() *wrappers.Int64Value {
	if m != nil {
		return m.TempBuffers
	}
	return nil
}

func (m *PostgresqlConfig11) GetMaxPreparedTransactions() *wrappers.Int64Value {
	if m != nil {
		return m.MaxPreparedTransactions
	}
	return nil
}

func (m *PostgresqlConfig11) GetWorkMem() *wrappers.Int64Value {
	if m != nil {
		return m.WorkMem
	}
	return nil
}

func (m *PostgresqlConfig11) GetMaintenanceWorkMem() *wrappers.Int64Value {
	if m != nil {
		return m.MaintenanceWorkMem
	}
	return nil
}

func (m *PostgresqlConfig11) GetAutovacuumWorkMem() *wrappers.Int64Value {
	if m != nil {
		return m.AutovacuumWorkMem
	}
	return nil
}

func (m *PostgresqlConfig11) GetTempFileLimit() *wrappers.Int64Value {
	if m != nil {
		return m.TempFileLimit
	}
	return nil
}

func (m *PostgresqlConfig11) GetVacuumCostDelay() *wrappers.Int64Value {
	if m != nil {
		return m.VacuumCostDelay
	}
	return nil
}

func (m *PostgresqlConfig11) GetVacuumCostPageHit() *wrappers.Int64Value {
	if m != nil {
		return m.VacuumCostPageHit
	}
	return nil
}

func (m *PostgresqlConfig11) GetVacuumCostPageMiss() *wrappers.Int64Value {
	if m != nil {
		return m.VacuumCostPageMiss
	}
	return nil
}

func (m *PostgresqlConfig11) GetVacuumCostPageDirty() *wrappers.Int64Value {
	if m != nil {
		return m.VacuumCostPageDirty
	}
	return nil
}

func (m *PostgresqlConfig11) GetVacuumCostLimit() *wrappers.Int64Value {
	if m != nil {
		return m.VacuumCostLimit
	}
	return nil
}

func (m *PostgresqlConfig11) GetBgwriterDelay() *wrappers.Int64Value {
	if m != nil {
		return m.BgwriterDelay
	}
	return nil
}

func (m *PostgresqlConfig11) GetBgwriterLruMaxpages() *wrappers.Int64Value {
	if m != nil {
		return m.BgwriterLruMaxpages
	}
	return nil
}

func (m *PostgresqlConfig11) GetBgwriterLruMultiplier() *wrappers.DoubleValue {
	if m != nil {
		return m.BgwriterLruMultiplier
	}
	return nil
}

func (m *PostgresqlConfig11) GetBgwriterFlushAfter() *wrappers.Int64Value {
	if m != nil {
		return m.BgwriterFlushAfter
	}
	return nil
}

func (m *PostgresqlConfig11) GetBackendFlushAfter() *wrappers.Int64Value {
	if m != nil {
		return m.BackendFlushAfter
	}
	return nil
}

func (m *PostgresqlConfig11) GetOldSnapshotThreshold() *wrappers.Int64Value {
	if m != nil {
		return m.OldSnapshotThreshold
	}
	return nil
}

func (m *PostgresqlConfig11) GetWalLevel() PostgresqlConfig11_WalLevel {
	if m != nil {
		return m.WalLevel
	}
	return PostgresqlConfig11_WAL_LEVEL_UNSPECIFIED
}

func (m *PostgresqlConfig11) GetSynchronousCommit() PostgresqlConfig11_SynchronousCommit {
	if m != nil {
		return m.SynchronousCommit
	}
	return PostgresqlConfig11_SYNCHRONOUS_COMMIT_UNSPECIFIED
}

func (m *PostgresqlConfig11) GetCheckpointTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.CheckpointTimeout
	}
	return nil
}

func (m *PostgresqlConfig11) GetCheckpointCompletionTarget() *wrappers.DoubleValue {
	if m != nil {
		return m.CheckpointCompletionTarget
	}
	return nil
}

func (m *PostgresqlConfig11) GetCheckpointFlushAfter() *wrappers.Int64Value {
	if m != nil {
		return m.CheckpointFlushAfter
	}
	return nil
}

func (m *PostgresqlConfig11) GetMaxWalSize() *wrappers.Int64Value {
	if m != nil {
		return m.MaxWalSize
	}
	return nil
}

func (m *PostgresqlConfig11) GetMinWalSize() *wrappers.Int64Value {
	if m != nil {
		return m.MinWalSize
	}
	return nil
}

func (m *PostgresqlConfig11) GetMaxStandbyStreamingDelay() *wrappers.Int64Value {
	if m != nil {
		return m.MaxStandbyStreamingDelay
	}
	return nil
}

func (m *PostgresqlConfig11) GetDefaultStatisticsTarget() *wrappers.Int64Value {
	if m != nil {
		return m.DefaultStatisticsTarget
	}
	return nil
}

func (m *PostgresqlConfig11) GetConstraintExclusion() PostgresqlConfig11_ConstraintExclusion {
	if m != nil {
		return m.ConstraintExclusion
	}
	return PostgresqlConfig11_CONSTRAINT_EXCLUSION_UNSPECIFIED
}

func (m *PostgresqlConfig11) GetCursorTupleFraction() *wrappers.DoubleValue {
	if m != nil {
		return m.CursorTupleFraction
	}
	return nil
}

func (m *PostgresqlConfig11) GetFromCollapseLimit() *wrappers.Int64Value {
	if m != nil {
		return m.FromCollapseLimit
	}
	return nil
}

func (m *PostgresqlConfig11) GetJoinCollapseLimit() *wrappers.Int64Value {
	if m != nil {
		return m.JoinCollapseLimit
	}
	return nil
}

func (m *PostgresqlConfig11) GetForceParallelMode() PostgresqlConfig11_ForceParallelMode {
	if m != nil {
		return m.ForceParallelMode
	}
	return PostgresqlConfig11_FORCE_PARALLEL_MODE_UNSPECIFIED
}

func (m *PostgresqlConfig11) GetClientMinMessages() PostgresqlConfig11_LogLevel {
	if m != nil {
		return m.ClientMinMessages
	}
	return PostgresqlConfig11_LOG_LEVEL_UNSPECIFIED
}

func (m *PostgresqlConfig11) GetLogMinMessages() PostgresqlConfig11_LogLevel {
	if m != nil {
		return m.LogMinMessages
	}
	return PostgresqlConfig11_LOG_LEVEL_UNSPECIFIED
}

func (m *PostgresqlConfig11) GetLogMinErrorStatement() PostgresqlConfig11_LogLevel {
	if m != nil {
		return m.LogMinErrorStatement
	}
	return PostgresqlConfig11_LOG_LEVEL_UNSPECIFIED
}

func (m *PostgresqlConfig11) GetLogMinDurationStatement() *wrappers.Int64Value {
	if m != nil {
		return m.LogMinDurationStatement
	}
	return nil
}

func (m *PostgresqlConfig11) GetLogCheckpoints() *wrappers.BoolValue {
	if m != nil {
		return m.LogCheckpoints
	}
	return nil
}

func (m *PostgresqlConfig11) GetLogConnections() *wrappers.BoolValue {
	if m != nil {
		return m.LogConnections
	}
	return nil
}

func (m *PostgresqlConfig11) GetLogDisconnections() *wrappers.BoolValue {
	if m != nil {
		return m.LogDisconnections
	}
	return nil
}

func (m *PostgresqlConfig11) GetLogDuration() *wrappers.BoolValue {
	if m != nil {
		return m.LogDuration
	}
	return nil
}

func (m *PostgresqlConfig11) GetLogErrorVerbosity() PostgresqlConfig11_LogErrorVerbosity {
	if m != nil {
		return m.LogErrorVerbosity
	}
	return PostgresqlConfig11_LOG_ERROR_VERBOSITY_UNSPECIFIED
}

func (m *PostgresqlConfig11) GetLogLockWaits() *wrappers.BoolValue {
	if m != nil {
		return m.LogLockWaits
	}
	return nil
}

func (m *PostgresqlConfig11) GetLogStatement() PostgresqlConfig11_LogStatement {
	if m != nil {
		return m.LogStatement
	}
	return PostgresqlConfig11_LOG_STATEMENT_UNSPECIFIED
}

func (m *PostgresqlConfig11) GetLogTempFiles() *wrappers.Int64Value {
	if m != nil {
		return m.LogTempFiles
	}
	return nil
}

func (m *PostgresqlConfig11) GetSearchPath() string {
	if m != nil {
		return m.SearchPath
	}
	return ""
}

func (m *PostgresqlConfig11) GetRowSecurity() *wrappers.BoolValue {
	if m != nil {
		return m.RowSecurity
	}
	return nil
}

func (m *PostgresqlConfig11) GetDefaultTransactionIsolation() PostgresqlConfig11_TransactionIsolation {
	if m != nil {
		return m.DefaultTransactionIsolation
	}
	return PostgresqlConfig11_TRANSACTION_ISOLATION_UNSPECIFIED
}

func (m *PostgresqlConfig11) GetStatementTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.StatementTimeout
	}
	return nil
}

func (m *PostgresqlConfig11) GetLockTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.LockTimeout
	}
	return nil
}

func (m *PostgresqlConfig11) GetIdleInTransactionSessionTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.IdleInTransactionSessionTimeout
	}
	return nil
}

func (m *PostgresqlConfig11) GetByteaOutput() PostgresqlConfig11_ByteaOutput {
	if m != nil {
		return m.ByteaOutput
	}
	return PostgresqlConfig11_BYTEA_OUTPUT_UNSPECIFIED
}

func (m *PostgresqlConfig11) GetXmlbinary() PostgresqlConfig11_XmlBinary {
	if m != nil {
		return m.Xmlbinary
	}
	return PostgresqlConfig11_XML_BINARY_UNSPECIFIED
}

func (m *PostgresqlConfig11) GetXmloption() PostgresqlConfig11_XmlOption {
	if m != nil {
		return m.Xmloption
	}
	return PostgresqlConfig11_XML_OPTION_UNSPECIFIED
}

func (m *PostgresqlConfig11) GetGinPendingListLimit() *wrappers.Int64Value {
	if m != nil {
		return m.GinPendingListLimit
	}
	return nil
}

func (m *PostgresqlConfig11) GetDeadlockTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.DeadlockTimeout
	}
	return nil
}

func (m *PostgresqlConfig11) GetMaxLocksPerTransaction() *wrappers.Int64Value {
	if m != nil {
		return m.MaxLocksPerTransaction
	}
	return nil
}

func (m *PostgresqlConfig11) GetMaxPredLocksPerTransaction() *wrappers.Int64Value {
	if m != nil {
		return m.MaxPredLocksPerTransaction
	}
	return nil
}

func (m *PostgresqlConfig11) GetArrayNulls() *wrappers.BoolValue {
	if m != nil {
		return m.ArrayNulls
	}
	return nil
}

func (m *PostgresqlConfig11) GetBackslashQuote() PostgresqlConfig11_BackslashQuote {
	if m != nil {
		return m.BackslashQuote
	}
	return PostgresqlConfig11_BACKSLASH_QUOTE_UNSPECIFIED
}

func (m *PostgresqlConfig11) GetDefaultWithOids() *wrappers.BoolValue {
	if m != nil {
		return m.DefaultWithOids
	}
	return nil
}

func (m *PostgresqlConfig11) GetEscapeStringWarning() *wrappers.BoolValue {
	if m != nil {
		return m.EscapeStringWarning
	}
	return nil
}

func (m *PostgresqlConfig11) GetLoCompatPrivileges() *wrappers.BoolValue {
	if m != nil {
		return m.LoCompatPrivileges
	}
	return nil
}

func (m *PostgresqlConfig11) GetOperatorPrecedenceWarning() *wrappers.BoolValue {
	if m != nil {
		return m.OperatorPrecedenceWarning
	}
	return nil
}

func (m *PostgresqlConfig11) GetQuoteAllIdentifiers() *wrappers.BoolValue {
	if m != nil {
		return m.QuoteAllIdentifiers
	}
	return nil
}

func (m *PostgresqlConfig11) GetStandardConformingStrings() *wrappers.BoolValue {
	if m != nil {
		return m.StandardConformingStrings
	}
	return nil
}

func (m *PostgresqlConfig11) GetSynchronizeSeqscans() *wrappers.BoolValue {
	if m != nil {
		return m.SynchronizeSeqscans
	}
	return nil
}

func (m *PostgresqlConfig11) GetTransformNullEquals() *wrappers.BoolValue {
	if m != nil {
		return m.TransformNullEquals
	}
	return nil
}

func (m *PostgresqlConfig11) GetExitOnError() *wrappers.BoolValue {
	if m != nil {
		return m.ExitOnError
	}
	return nil
}

func (m *PostgresqlConfig11) GetSeqPageCost() *wrappers.DoubleValue {
	if m != nil {
		return m.SeqPageCost
	}
	return nil
}

func (m *PostgresqlConfig11) GetRandomPageCost() *wrappers.DoubleValue {
	if m != nil {
		return m.RandomPageCost
	}
	return nil
}

func (m *PostgresqlConfig11) GetAutovacuumMaxWorkers() *wrappers.Int64Value {
	if m != nil {
		return m.AutovacuumMaxWorkers
	}
	return nil
}

func (m *PostgresqlConfig11) GetAutovacuumVacuumCostDelay() *wrappers.Int64Value {
	if m != nil {
		return m.AutovacuumVacuumCostDelay
	}
	return nil
}

func (m *PostgresqlConfig11) GetAutovacuumVacuumCostLimit() *wrappers.Int64Value {
	if m != nil {
		return m.AutovacuumVacuumCostLimit
	}
	return nil
}

func (m *PostgresqlConfig11) GetAutovacuumNaptime() *wrappers.Int64Value {
	if m != nil {
		return m.AutovacuumNaptime
	}
	return nil
}

func (m *PostgresqlConfig11) GetArchiveTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.ArchiveTimeout
	}
	return nil
}

func (m *PostgresqlConfig11) GetTrackActivityQuerySize() *wrappers.Int64Value {
	if m != nil {
		return m.TrackActivityQuerySize
	}
	return nil
}

func (m *PostgresqlConfig11) GetEnableBitmapscan() *wrappers.BoolValue {
	if m != nil {
		return m.EnableBitmapscan
	}
	return nil
}

func (m *PostgresqlConfig11) GetEnableHashagg() *wrappers.BoolValue {
	if m != nil {
		return m.EnableHashagg
	}
	return nil
}

func (m *PostgresqlConfig11) GetEnableHashjoin() *wrappers.BoolValue {
	if m != nil {
		return m.EnableHashjoin
	}
	return nil
}

func (m *PostgresqlConfig11) GetEnableIndexscan() *wrappers.BoolValue {
	if m != nil {
		return m.EnableIndexscan
	}
	return nil
}

func (m *PostgresqlConfig11) GetEnableIndexonlyscan() *wrappers.BoolValue {
	if m != nil {
		return m.EnableIndexonlyscan
	}
	return nil
}

func (m *PostgresqlConfig11) GetEnableMaterial() *wrappers.BoolValue {
	if m != nil {
		return m.EnableMaterial
	}
	return nil
}

func (m *PostgresqlConfig11) GetEnableMergejoin() *wrappers.BoolValue {
	if m != nil {
		return m.EnableMergejoin
	}
	return nil
}

func (m *PostgresqlConfig11) GetEnableNestloop() *wrappers.BoolValue {
	if m != nil {
		return m.EnableNestloop
	}
	return nil
}

func (m *PostgresqlConfig11) GetEnableSeqscan() *wrappers.BoolValue {
	if m != nil {
		return m.EnableSeqscan
	}
	return nil
}

func (m *PostgresqlConfig11) GetEnableSort() *wrappers.BoolValue {
	if m != nil {
		return m.EnableSort
	}
	return nil
}

func (m *PostgresqlConfig11) GetEnableTidscan() *wrappers.BoolValue {
	if m != nil {
		return m.EnableTidscan
	}
	return nil
}

func (m *PostgresqlConfig11) GetMaxWorkerProcesses() *wrappers.Int64Value {
	if m != nil {
		return m.MaxWorkerProcesses
	}
	return nil
}

func (m *PostgresqlConfig11) GetMaxParallelWorkers() *wrappers.Int64Value {
	if m != nil {
		return m.MaxParallelWorkers
	}
	return nil
}

func (m *PostgresqlConfig11) GetMaxParallelWorkersPerGather() *wrappers.Int64Value {
	if m != nil {
		return m.MaxParallelWorkersPerGather
	}
	return nil
}

func (m *PostgresqlConfig11) GetAutovacuumVacuumScaleFactor() *wrappers.DoubleValue {
	if m != nil {
		return m.AutovacuumVacuumScaleFactor
	}
	return nil
}

func (m *PostgresqlConfig11) GetAutovacuumAnalyzeScaleFactor() *wrappers.DoubleValue {
	if m != nil {
		return m.AutovacuumAnalyzeScaleFactor
	}
	return nil
}

func (m *PostgresqlConfig11) GetDefaultTransactionReadOnly() *wrappers.BoolValue {
	if m != nil {
		return m.DefaultTransactionReadOnly
	}
	return nil
}

func (m *PostgresqlConfig11) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func (m *PostgresqlConfig11) GetEnableParallelAppend() *wrappers.BoolValue {
	if m != nil {
		return m.EnableParallelAppend
	}
	return nil
}

func (m *PostgresqlConfig11) GetEnableParallelHash() *wrappers.BoolValue {
	if m != nil {
		return m.EnableParallelHash
	}
	return nil
}

func (m *PostgresqlConfig11) GetEnablePartitionPruning() *wrappers.BoolValue {
	if m != nil {
		return m.EnablePartitionPruning
	}
	return nil
}

func (m *PostgresqlConfig11) GetEnablePartitionwiseAggregate() *wrappers.BoolValue {
	if m != nil {
		return m.EnablePartitionwiseAggregate
	}
	return nil
}

func (m *PostgresqlConfig11) GetEnablePartitionwiseJoin() *wrappers.BoolValue {
	if m != nil {
		return m.EnablePartitionwiseJoin
	}
	return nil
}

func (m *PostgresqlConfig11) GetJit() *wrappers.BoolValue {
	if m != nil {
		return m.Jit
	}
	return nil
}

func (m *PostgresqlConfig11) GetMaxParallelMaintenanceWorkers() *wrappers.Int64Value {
	if m != nil {
		return m.MaxParallelMaintenanceWorkers
	}
	return nil
}

func (m *PostgresqlConfig11) GetParallelLeaderParticipation() *wrappers.BoolValue {
	if m != nil {
		return m.ParallelLeaderParticipation
	}
	return nil
}

func (m *PostgresqlConfig11) GetVacuumCleanupIndexScaleFactor() *wrappers.DoubleValue {
	if m != nil {
		return m.VacuumCleanupIndexScaleFactor
	}
	return nil
}

func (m *PostgresqlConfig11) GetEffectiveIoConcurrency() *wrappers.Int64Value {
	if m != nil {
		return m.EffectiveIoConcurrency
	}
	return nil
}

func (m *PostgresqlConfig11) GetEffectiveCacheSize() *wrappers.Int64Value {
	if m != nil {
		return m.EffectiveCacheSize
	}
	return nil
}

func (m *PostgresqlConfig11) GetSharedPreloadLibraries() []PostgresqlConfig11_SharedPreloadLibraries {
	if m != nil {
		return m.SharedPreloadLibraries
	}
	return nil
}

func (m *PostgresqlConfig11) GetAutoExplainLogMinDuration() *wrappers.Int64Value {
	if m != nil {
		return m.AutoExplainLogMinDuration
	}
	return nil
}

func (m *PostgresqlConfig11) GetAutoExplainLogAnalyze() *wrappers.BoolValue {
	if m != nil {
		return m.AutoExplainLogAnalyze
	}
	return nil
}

func (m *PostgresqlConfig11) GetAutoExplainLogBuffers() *wrappers.BoolValue {
	if m != nil {
		return m.AutoExplainLogBuffers
	}
	return nil
}

func (m *PostgresqlConfig11) GetAutoExplainLogTiming() *wrappers.BoolValue {
	if m != nil {
		return m.AutoExplainLogTiming
	}
	return nil
}

func (m *PostgresqlConfig11) GetAutoExplainLogTriggers() *wrappers.BoolValue {
	if m != nil {
		return m.AutoExplainLogTriggers
	}
	return nil
}

func (m *PostgresqlConfig11) GetAutoExplainLogVerbose() *wrappers.BoolValue {
	if m != nil {
		return m.AutoExplainLogVerbose
	}
	return nil
}

func (m *PostgresqlConfig11) GetAutoExplainLogNestedStatements() *wrappers.BoolValue {
	if m != nil {
		return m.AutoExplainLogNestedStatements
	}
	return nil
}

func (m *PostgresqlConfig11) GetAutoExplainSampleRate() *wrappers.DoubleValue {
	if m != nil {
		return m.AutoExplainSampleRate
	}
	return nil
}

func (m *PostgresqlConfig11) GetPgHintPlanEnableHint() *wrappers.BoolValue {
	if m != nil {
		return m.PgHintPlanEnableHint
	}
	return nil
}

func (m *PostgresqlConfig11) GetPgHintPlanEnableHintTable() *wrappers.BoolValue {
	if m != nil {
		return m.PgHintPlanEnableHintTable
	}
	return nil
}

func (m *PostgresqlConfig11) GetPgHintPlanDebugPrint() PostgresqlConfig11_PgHintPlanDebugPrint {
	if m != nil {
		return m.PgHintPlanDebugPrint
	}
	return PostgresqlConfig11_PG_HINT_PLAN_DEBUG_PRINT_UNSPECIFIED
}

func (m *PostgresqlConfig11) GetPgHintPlanMessageLevel() PostgresqlConfig11_LogLevel {
	if m != nil {
		return m.PgHintPlanMessageLevel
	}
	return PostgresqlConfig11_LOG_LEVEL_UNSPECIFIED
}

type PostgresqlConfigSet11 struct {
	// Effective settings for a PostgreSQL 11 cluster (a combination of settings defined
	// in [user_config] and [default_config]).
	EffectiveConfig *PostgresqlConfig11 `protobuf:"bytes,1,opt,name=effective_config,json=effectiveConfig,proto3" json:"effective_config,omitempty"`
	// User-defined settings for a PostgreSQL 11 cluster.
	UserConfig *PostgresqlConfig11 `protobuf:"bytes,2,opt,name=user_config,json=userConfig,proto3" json:"user_config,omitempty"`
	// Default configuration for a PostgreSQL 11 cluster.
	DefaultConfig        *PostgresqlConfig11 `protobuf:"bytes,3,opt,name=default_config,json=defaultConfig,proto3" json:"default_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PostgresqlConfigSet11) Reset()         { *m = PostgresqlConfigSet11{} }
func (m *PostgresqlConfigSet11) String() string { return proto.CompactTextString(m) }
func (*PostgresqlConfigSet11) ProtoMessage()    {}
func (*PostgresqlConfigSet11) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f28b14e19e1f835, []int{1}
}

func (m *PostgresqlConfigSet11) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostgresqlConfigSet11.Unmarshal(m, b)
}
func (m *PostgresqlConfigSet11) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostgresqlConfigSet11.Marshal(b, m, deterministic)
}
func (m *PostgresqlConfigSet11) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostgresqlConfigSet11.Merge(m, src)
}
func (m *PostgresqlConfigSet11) XXX_Size() int {
	return xxx_messageInfo_PostgresqlConfigSet11.Size(m)
}
func (m *PostgresqlConfigSet11) XXX_DiscardUnknown() {
	xxx_messageInfo_PostgresqlConfigSet11.DiscardUnknown(m)
}

var xxx_messageInfo_PostgresqlConfigSet11 proto.InternalMessageInfo

func (m *PostgresqlConfigSet11) GetEffectiveConfig() *PostgresqlConfig11 {
	if m != nil {
		return m.EffectiveConfig
	}
	return nil
}

func (m *PostgresqlConfigSet11) GetUserConfig() *PostgresqlConfig11 {
	if m != nil {
		return m.UserConfig
	}
	return nil
}

func (m *PostgresqlConfigSet11) GetDefaultConfig() *PostgresqlConfig11 {
	if m != nil {
		return m.DefaultConfig
	}
	return nil
}

func init() {
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_WalLevel", PostgresqlConfig11_WalLevel_name, PostgresqlConfig11_WalLevel_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_SynchronousCommit", PostgresqlConfig11_SynchronousCommit_name, PostgresqlConfig11_SynchronousCommit_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_ConstraintExclusion", PostgresqlConfig11_ConstraintExclusion_name, PostgresqlConfig11_ConstraintExclusion_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_ForceParallelMode", PostgresqlConfig11_ForceParallelMode_name, PostgresqlConfig11_ForceParallelMode_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_LogLevel", PostgresqlConfig11_LogLevel_name, PostgresqlConfig11_LogLevel_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_LogErrorVerbosity", PostgresqlConfig11_LogErrorVerbosity_name, PostgresqlConfig11_LogErrorVerbosity_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_LogStatement", PostgresqlConfig11_LogStatement_name, PostgresqlConfig11_LogStatement_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_TransactionIsolation", PostgresqlConfig11_TransactionIsolation_name, PostgresqlConfig11_TransactionIsolation_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_ByteaOutput", PostgresqlConfig11_ByteaOutput_name, PostgresqlConfig11_ByteaOutput_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_XmlBinary", PostgresqlConfig11_XmlBinary_name, PostgresqlConfig11_XmlBinary_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_XmlOption", PostgresqlConfig11_XmlOption_name, PostgresqlConfig11_XmlOption_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_BackslashQuote", PostgresqlConfig11_BackslashQuote_name, PostgresqlConfig11_BackslashQuote_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_PgHintPlanDebugPrint", PostgresqlConfig11_PgHintPlanDebugPrint_name, PostgresqlConfig11_PgHintPlanDebugPrint_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_SharedPreloadLibraries", PostgresqlConfig11_SharedPreloadLibraries_name, PostgresqlConfig11_SharedPreloadLibraries_value)
	proto.RegisterType((*PostgresqlConfig11)(nil), "yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11")
	proto.RegisterType((*PostgresqlConfigSet11)(nil), "yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet11")
}

func init() {
	proto.RegisterFile("yandex/cloud/mdb/postgresql/v1/config/postgresql11.proto", fileDescriptor_7f28b14e19e1f835)
}

var fileDescriptor_7f28b14e19e1f835 = []byte{
	// 4004 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x9b, 0x4b, 0x7b, 0xdb, 0xc6,
	0x7a, 0xc7, 0x4b, 0xc9, 0x49, 0xec, 0x91, 0x25, 0x81, 0xa3, 0x8b, 0x21, 0xc9, 0xb7, 0x28, 0x71,
	0xea, 0x9c, 0x1e, 0x49, 0xa4, 0xad, 0x38, 0x4e, 0xd3, 0xb8, 0x81, 0x48, 0x48, 0xe2, 0x09, 0x78,
	0x31, 0x48, 0x59, 0xb6, 0x53, 0x67, 0x32, 0x04, 0x86, 0xe4, 0x58, 0x20, 0x00, 0x63, 0x40, 0x5d,
	0xdc, 0xa7, 0x7d, 0xda, 0x4d, 0x17, 0x67, 0x79, 0x56, 0x6d, 0xbf, 0x4a, 0x3f, 0x80, 0xb6, 0x5d,
	0x75, 0xd9, 0x65, 0x3f, 0x84, 0x56, 0x7d, 0x66, 0x00, 0x10, 0xe0, 0x45, 0x01, 0x65, 0xc7, 0x2b,
	0x7a, 0x30, 0xff, 0xdf, 0x3b, 0x97, 0x77, 0xde, 0x99, 0x77, 0x00, 0x81, 0xa7, 0x67, 0xd8, 0x36,
	0xc9, 0xe9, 0x96, 0x61, 0x39, 0x3d, 0x73, 0xab, 0x6b, 0x36, 0xb7, 0x5c, 0x87, 0xf9, 0x6d, 0x8f,
	0xb0, 0x77, 0xd6, 0xd6, 0x71, 0x7e, 0xcb, 0x70, 0xec, 0x16, 0x6d, 0x27, 0x0a, 0xf3, 0xf9, 0x4d,
	0xd7, 0x73, 0x7c, 0x07, 0x3e, 0x08, 0x94, 0x9b, 0x42, 0xb9, 0xd9, 0x35, 0x9b, 0x9b, 0x71, 0xa5,
	0xcd, 0xe3, 0xfc, 0x66, 0xa0, 0x5c, 0xbd, 0xdb, 0x76, 0x9c, 0xb6, 0x45, 0xb6, 0x84, 0xa8, 0xd9,
	0x6b, 0x6d, 0x9d, 0x78, 0xd8, 0x75, 0x89, 0xc7, 0x02, 0xcc, 0xea, 0x9d, 0x81, 0x06, 0x1c, 0x63,
	0x8b, 0x9a, 0xd8, 0xa7, 0x8e, 0x1d, 0x3c, 0x5e, 0xff, 0xdf, 0x26, 0x80, 0xb5, 0x3e, 0xb7, 0x20,
	0x98, 0xf9, 0x3c, 0x2c, 0x82, 0xf9, 0x2e, 0x3e, 0x45, 0x86, 0x63, 0xdb, 0xc4, 0xe0, 0xd5, 0x99,
	0x9c, 0xb9, 0x9f, 0x79, 0x38, 0xf3, 0x68, 0x6d, 0x33, 0xb0, 0xb7, 0x19, 0xd9, 0xdb, 0x2c, 0xd9,
	0xfe, 0x93, 0xed, 0x17, 0xd8, 0xea, 0x11, 0x7d, 0xae, 0x8b, 0x4f, 0x0b, 0xb1, 0x04, 0xee, 0x80,
	0x39, 0xd6, 0xc1, 0x1e, 0x31, 0x51, 0xb3, 0xd7, 0x6a, 0x11, 0x8f, 0xc9, 0x53, 0xe9, 0x90, 0xd9,
	0x40, 0xb2, 0x13, 0x28, 0xe0, 0x33, 0x70, 0xd3, 0x27, 0x5d, 0xb7, 0x4f, 0x98, 0x4e, 0x27, 0xcc,
	0x70, 0x41, 0xa4, 0x3f, 0x04, 0x2b, 0xbc, 0x27, 0xae, 0x47, 0x5c, 0xd1, 0x12, 0xdf, 0xc3, 0x36,
	0xc3, 0x61, 0x9f, 0xae, 0xa5, 0xc3, 0x6e, 0x75, 0xf1, 0x69, 0x2d, 0x14, 0x37, 0x12, 0x5a, 0xf8,
	0x04, 0x5c, 0x3f, 0x71, 0xbc, 0x23, 0xd4, 0x25, 0x5d, 0xf9, 0x93, 0x74, 0xce, 0x67, 0xbc, 0x72,
	0x99, 0x74, 0x61, 0x19, 0x2c, 0x76, 0x31, 0xb5, 0x7d, 0x62, 0x63, 0xdb, 0x20, 0xa8, 0xcf, 0xf8,
	0x34, 0x9d, 0x01, 0x13, 0xc2, 0xc3, 0x10, 0xf7, 0x13, 0x58, 0xc0, 0x3d, 0xdf, 0x39, 0xc6, 0x46,
	0xaf, 0xd7, 0x8d, 0x69, 0x9f, 0xa5, 0xd3, 0xb2, 0xb1, 0x2e, 0x82, 0x15, 0xc0, 0xbc, 0x18, 0xec,
	0x16, 0xb5, 0x08, 0xb2, 0x68, 0x97, 0xfa, 0xf2, 0xf5, 0x09, 0x66, 0x8c, 0x6b, 0x76, 0xa9, 0x45,
	0x34, 0xae, 0x80, 0x7b, 0x20, 0x1b, 0xb6, 0xc6, 0x70, 0x98, 0x8f, 0x4c, 0x62, 0xe1, 0x33, 0xf9,
	0x46, 0x3a, 0x66, 0x3e, 0x50, 0x15, 0x1c, 0xe6, 0x17, 0xb9, 0x06, 0x6a, 0x60, 0x31, 0x09, 0x72,
	0x71, 0x9b, 0xa0, 0x0e, 0xf5, 0x65, 0x30, 0x41, 0xdf, 0x62, 0x56, 0x0d, 0xb7, 0xc9, 0x3e, 0xf5,
	0x61, 0x05, 0x2c, 0x8d, 0xd0, 0xba, 0x94, 0x31, 0x79, 0x66, 0x82, 0x81, 0x1f, 0xc4, 0x95, 0x29,
	0x63, 0xb0, 0x06, 0x96, 0x47, 0x78, 0x26, 0xf5, 0xfc, 0x33, 0xf9, 0x66, 0x3a, 0x70, 0x61, 0x10,
	0x58, 0xe4, 0xba, 0xe1, 0x81, 0x0b, 0xc6, 0x7f, 0xf6, 0x4a, 0x03, 0x17, 0xcc, 0x40, 0x0d, 0xcc,
	0x35, 0xdb, 0x27, 0x1e, 0xf5, 0x89, 0x17, 0x0e, 0xff, 0x5c, 0x2a, 0x65, 0xe7, 0xe6, 0xc5, 0x79,
	0xfe, 0x7a, 0x3e, 0xb7, 0x91, 0xcf, 0xe5, 0x72, 0x39, 0x7d, 0x36, 0x02, 0x04, 0x53, 0x51, 0x05,
	0x4b, 0x7d, 0xa2, 0xe5, 0xf5, 0x50, 0x17, 0x9f, 0xf2, 0x0e, 0x33, 0x79, 0x7e, 0x82, 0xbe, 0x46,
	0x4a, 0xcd, 0xeb, 0x95, 0x43, 0x1d, 0x6c, 0x80, 0x5b, 0x83, 0xc0, 0x9e, 0xe5, 0x53, 0xd7, 0xa2,
	0xc4, 0x93, 0x25, 0x81, 0xbc, 0x3d, 0x82, 0x2c, 0x3a, 0xbd, 0xa6, 0x45, 0x02, 0xe6, 0x52, 0x92,
	0xd9, 0x97, 0xc2, 0x57, 0x60, 0xb1, 0x4f, 0x6d, 0x59, 0x3d, 0xd6, 0x41, 0xb8, 0xe5, 0x13, 0x4f,
	0xce, 0xa6, 0x77, 0x1f, 0x5c, 0x9c, 0xe7, 0x3f, 0xcd, 0x6d, 0x3c, 0xca, 0x6d, 0x3f, 0xd5, 0x61,
	0x04, 0xd9, 0xe5, 0x0c, 0x85, 0x23, 0xe0, 0x21, 0x58, 0x68, 0x62, 0xe3, 0x88, 0xd8, 0xe6, 0x00,
	0x19, 0x5e, 0x8d, 0x9c, 0x0d, 0x19, 0x09, 0x70, 0x13, 0x2c, 0x3b, 0x96, 0x89, 0x98, 0x8d, 0x5d,
	0xd6, 0x71, 0x7c, 0xe4, 0x77, 0x3c, 0xc2, 0x3a, 0x8e, 0x65, 0xca, 0x0b, 0xe9, 0xec, 0xf9, 0x8b,
	0xf3, 0xfc, 0xcc, 0x46, 0x7e, 0xe3, 0xe9, 0x93, 0xed, 0x9c, 0x98, 0xb7, 0x45, 0xc7, 0x32, 0xeb,
	0x21, 0xaa, 0x11, 0x91, 0x20, 0x02, 0x37, 0x4e, 0xb0, 0x85, 0x2c, 0x72, 0x4c, 0x2c, 0x79, 0xf1,
	0x7e, 0xe6, 0xe1, 0xdc, 0xa3, 0x9d, 0xcd, 0x89, 0xf6, 0x97, 0xcd, 0xd1, 0xcd, 0x61, 0xf3, 0x10,
	0x5b, 0x1a, 0x27, 0xe9, 0xd7, 0x4f, 0xc2, 0x5f, 0xf0, 0x3d, 0x80, 0xec, 0xcc, 0x36, 0x3a, 0x9e,
	0x63, 0x3b, 0x3d, 0x86, 0x0c, 0xa7, 0xcb, 0x7d, 0x77, 0x49, 0x58, 0xfa, 0xe9, 0xc3, 0x2d, 0xd5,
	0x63, 0x66, 0x41, 0x20, 0xf5, 0x2c, 0x1b, 0x2e, 0x82, 0xbf, 0x00, 0x68, 0x74, 0x88, 0x71, 0xe4,
	0x3a, 0xd4, 0xf6, 0x91, 0x4f, 0xbb, 0xc4, 0xe9, 0xf9, 0xf2, 0x72, 0xfa, 0xe0, 0xc1, 0x8b, 0xf3,
	0xfc, 0xdc, 0x63, 0x3e, 0x6c, 0xf1, 0xf8, 0x65, 0x63, 0x54, 0x23, 0x20, 0xc1, 0x5f, 0xc0, 0xed,
	0x04, 0xdf, 0x70, 0xba, 0xae, 0x45, 0xf8, 0x16, 0x80, 0x7c, 0xec, 0xb5, 0x89, 0x2f, 0xdf, 0x9a,
	0xc0, 0x5f, 0x57, 0x63, 0x42, 0xa1, 0x0f, 0x68, 0x08, 0x3d, 0x7c, 0x03, 0x96, 0x13, 0xfc, 0xa4,
	0x73, 0xc9, 0x57, 0x73, 0xae, 0xc5, 0x18, 0x93, 0xf0, 0xaf, 0x1f, 0xc0, 0x4d, 0xbe, 0x01, 0xf2,
	0xf9, 0x67, 0xf4, 0x3d, 0x91, 0x57, 0xd2, 0x57, 0x2c, 0xe8, 0xe2, 0xd3, 0x43, 0x6c, 0xd5, 0xe9,
	0x7b, 0x22, 0xe4, 0xd4, 0x8e, 0xe5, 0xab, 0x93, 0xc8, 0xa9, 0x1d, 0xc9, 0x5f, 0x83, 0x35, 0x6e,
	0x9d, 0xf9, 0xd8, 0x36, 0x9b, 0x67, 0x88, 0xf9, 0x1e, 0xc1, 0x5d, 0x6a, 0xb7, 0xc3, 0xb8, 0xb4,
	0x96, 0x4e, 0x93, 0xbb, 0xf8, 0xb4, 0x1e, 0xc8, 0xeb, 0x91, 0x3a, 0x08, 0x4a, 0x87, 0x60, 0xc5,
	0x24, 0x2d, 0xdc, 0xb3, 0x7c, 0xce, 0xf7, 0x29, 0xf3, 0xa9, 0xc1, 0xa2, 0x59, 0xb9, 0x3d, 0xc1,
	0xd6, 0x1e, 0xaa, 0xeb, 0x7d, 0x71, 0x38, 0x23, 0xff, 0x92, 0x01, 0x8b, 0x86, 0x63, 0x33, 0xdf,
	0xe3, 0xfb, 0x2d, 0x22, 0xa7, 0x86, 0xd5, 0x63, 0xd4, 0xb1, 0xe5, 0x3b, 0xc2, 0xa1, 0xcb, 0x1f,
	0xee, 0xd0, 0x85, 0x3e, 0x55, 0x8d, 0xa0, 0xfa, 0x82, 0x31, 0x5a, 0x08, 0x6b, 0x60, 0xc9, 0xe8,
	0x79, 0xcc, 0xf1, 0x90, 0xdf, 0x73, 0x2d, 0x82, 0x5a, 0x5e, 0x70, 0xee, 0x90, 0xef, 0x4e, 0xe0,
	0x6d, 0x0b, 0x81, 0xb4, 0xc1, 0x95, 0xbb, 0xa1, 0x10, 0xbe, 0x01, 0x0b, 0x2d, 0xcf, 0xe1, 0x7b,
	0x8b, 0x65, 0x61, 0x97, 0x45, 0xfb, 0xfb, 0xbd, 0x74, 0x1f, 0x93, 0x2e, 0xce, 0xf3, 0x37, 0xf3,
	0x1b, 0x8f, 0xf2, 0xdb, 0xdf, 0x6e, 0x3f, 0x7d, 0xfc, 0x64, 0xfb, 0x5b, 0x3d, 0xcb, 0x49, 0x85,
	0x10, 0x14, 0xec, 0x39, 0x6f, 0xc0, 0xc2, 0x5b, 0x87, 0xda, 0xc3, 0xf8, 0xfb, 0x1f, 0x84, 0xe7,
	0xa4, 0x41, 0xfc, 0x3f, 0x82, 0x85, 0x96, 0xe3, 0x19, 0x04, 0xb9, 0xd8, 0xc3, 0x96, 0x45, 0x2c,
	0xd4, 0x75, 0x4c, 0x22, 0x7f, 0xfe, 0xb1, 0x11, 0x66, 0x97, 0x43, 0x6b, 0x21, 0xb3, 0xec, 0x98,
	0x44, 0xcf, 0xb6, 0x86, 0x8b, 0xa0, 0x07, 0x16, 0x0c, 0x8b, 0x12, 0xdb, 0x47, 0x7c, 0x29, 0x74,
	0x09, 0x63, 0x62, 0xef, 0x5b, 0xff, 0xd8, 0x40, 0xaa, 0x39, 0xed, 0x20, 0x90, 0x66, 0x03, 0x7c,
	0x99, 0xda, 0xe5, 0x10, 0x0e, 0x2d, 0x20, 0x59, 0x4e, 0x7b, 0xd0, 0xe0, 0x17, 0xbf, 0x9b, 0xc1,
	0x39, 0xcb, 0x69, 0x27, 0xad, 0x9d, 0x81, 0x5b, 0x91, 0x35, 0xe2, 0x79, 0x8e, 0x27, 0x16, 0x14,
	0xe9, 0x12, 0xdb, 0x97, 0xbf, 0xfc, 0xdd, 0x8c, 0x2e, 0x06, 0x46, 0x55, 0x6e, 0xa0, 0x1e, 0xf1,
	0xe1, 0x4b, 0xb0, 0x1a, 0x99, 0x36, 0x7b, 0x9e, 0xc8, 0x4d, 0x12, 0xd6, 0x1f, 0x4c, 0xb0, 0x8c,
	0x03, 0x6c, 0x31, 0x14, 0xc7, 0xe4, 0x02, 0x98, 0xe7, 0xe4, 0x38, 0x2a, 0x32, 0xf9, 0x2b, 0x81,
	0x5b, 0x1d, 0xc1, 0xed, 0x38, 0x8e, 0x15, 0xe6, 0x30, 0x96, 0xd3, 0x2e, 0xc4, 0x8a, 0x3e, 0x24,
	0x91, 0x09, 0xfd, 0xf5, 0x64, 0x90, 0x44, 0x22, 0x54, 0x02, 0x90, 0x43, 0x4c, 0xca, 0x92, 0x9c,
	0x87, 0xa9, 0x9c, 0xac, 0xe5, 0xb4, 0x8b, 0x03, 0x22, 0x1e, 0x8f, 0x05, 0x2a, 0xec, 0xad, 0xfc,
	0x75, 0x2a, 0x64, 0x86, 0x43, 0xc2, 0xea, 0x7c, 0x1d, 0x71, 0x79, 0x30, 0xc9, 0xc7, 0xc4, 0x6b,
	0x3a, 0x8c, 0xfa, 0x67, 0xf2, 0x1f, 0x3e, 0x76, 0x1d, 0x69, 0x4e, 0x5b, 0xcc, 0xeb, 0x8b, 0x08,
	0x29, 0xda, 0x3e, 0x58, 0x04, 0x7f, 0x04, 0x7c, 0x60, 0x90, 0xe5, 0x18, 0x47, 0xe8, 0x04, 0x53,
	0x9f, 0xc9, 0x7f, 0x93, 0xda, 0x7a, 0xde, 0x5b, 0xcd, 0x31, 0x8e, 0x0e, 0x79, 0x7d, 0x78, 0x04,
	0x66, 0x39, 0x21, 0xf6, 0x8f, 0x3f, 0x8a, 0x86, 0xef, 0x7e, 0x54, 0xc3, 0xfb, 0x1e, 0x23, 0x8c,
	0xc5, 0xfe, 0xa3, 0x04, 0xcd, 0xed, 0x67, 0x44, 0x4c, 0xde, 0x48, 0xf7, 0x46, 0x8e, 0x68, 0x84,
	0xf9, 0x10, 0x83, 0xf7, 0xc0, 0x0c, 0x23, 0xd8, 0x33, 0x3a, 0xc8, 0xc5, 0x7e, 0x47, 0xde, 0xbc,
	0x9f, 0x79, 0x78, 0x43, 0x07, 0x41, 0x51, 0x0d, 0xfb, 0x1d, 0x3e, 0x9d, 0x9e, 0x73, 0x82, 0x18,
	0x31, 0x7a, 0x1e, 0x9f, 0x88, 0xad, 0xf4, 0xe9, 0xf4, 0x9c, 0x93, 0x7a, 0x58, 0x1d, 0xfe, 0x25,
	0x03, 0xee, 0x44, 0x7b, 0x60, 0x22, 0xb3, 0x45, 0x94, 0x39, 0x56, 0xe0, 0x1f, 0x39, 0x31, 0x40,
	0x95, 0x0f, 0x1f, 0xa0, 0x44, 0xd2, 0x5b, 0x8a, 0xa8, 0xfa, 0x5a, 0x68, 0x74, 0xdc, 0x43, 0xb8,
	0x0f, 0xb2, 0xfd, 0x09, 0xea, 0x9f, 0xc7, 0xf2, 0xe9, 0x43, 0x27, 0xf5, 0x55, 0xd1, 0xd1, 0xeb,
	0x19, 0x77, 0x76, 0xe3, 0xa8, 0x0f, 0x79, 0x34, 0x41, 0xf2, 0xcf, 0x05, 0x91, 0x9e, 0x82, 0x2f,
	0xa8, 0x69, 0x11, 0x44, 0xed, 0x81, 0xd1, 0x61, 0x84, 0x31, 0x71, 0x80, 0x0b, 0xb1, 0x8f, 0xd3,
	0xb1, 0xf7, 0x38, 0xa7, 0x64, 0x27, 0xfa, 0x5b, 0x0f, 0x20, 0x91, 0xa9, 0x0e, 0xb8, 0xd9, 0x3c,
	0xf3, 0x09, 0x46, 0x4e, 0xcf, 0x77, 0x7b, 0xbe, 0xbc, 0x2d, 0xc6, 0x5d, 0xfd, 0xf0, 0x71, 0xdf,
	0xe1, 0xb4, 0xaa, 0x80, 0xe9, 0x33, 0xcd, 0xf8, 0x3f, 0x10, 0x83, 0x1b, 0xa7, 0x5d, 0xab, 0x49,
	0x6d, 0xec, 0x9d, 0xc9, 0xdf, 0x08, 0x33, 0x85, 0x0f, 0x37, 0xf3, 0xb2, 0x6b, 0xed, 0x08, 0x94,
	0x1e, 0x53, 0x43, 0x13, 0x8e, 0x2b, 0x3c, 0xe8, 0xc9, 0xef, 0x60, 0xa2, 0x2a, 0x50, 0x7a, 0x4c,
	0xe5, 0xe9, 0x73, 0x9b, 0xda, 0xc8, 0x25, 0xb6, 0xc9, 0x8f, 0x83, 0x16, 0xed, 0x67, 0xbc, 0xdf,
	0x4e, 0x90, 0x52, 0xb6, 0xa9, 0x5d, 0x0b, 0x94, 0x1a, 0x8d, 0xb2, 0xde, 0x5d, 0x20, 0x99, 0x04,
	0x9b, 0x03, 0x0e, 0xf3, 0x74, 0x82, 0xec, 0x39, 0x12, 0x45, 0x33, 0xf9, 0x22, 0xb8, 0x31, 0xe2,
	0x45, 0x0c, 0xb9, 0xc4, 0x4b, 0xba, 0x8e, 0xfc, 0x5d, 0x3a, 0x70, 0xb9, 0x8b, 0x4f, 0x79, 0xc4,
	0x62, 0x35, 0xe2, 0x25, 0xfc, 0x05, 0x22, 0x70, 0x37, 0xbc, 0x89, 0x32, 0x2f, 0x81, 0xff, 0x6d,
	0x3a, 0x7c, 0x35, 0xb8, 0x8e, 0x32, 0xc7, 0x19, 0xf8, 0x1e, 0xcc, 0x60, 0xcf, 0xc3, 0x67, 0xc8,
	0xee, 0x59, 0x16, 0x93, 0xbf, 0x4f, 0x0d, 0x25, 0x40, 0x54, 0xaf, 0xf0, 0xda, 0xf0, 0x1d, 0x98,
	0xe7, 0xb9, 0x29, 0xb3, 0x30, 0xeb, 0xa0, 0x77, 0x3d, 0xc7, 0x27, 0xf2, 0xdf, 0x89, 0x89, 0xdf,
	0xff, 0x08, 0x17, 0x8e, 0x80, 0xcf, 0x39, 0x4f, 0x9f, 0x6b, 0x0e, 0xfc, 0x1f, 0xee, 0x82, 0x6c,
	0x14, 0xbb, 0x4e, 0xa8, 0xdf, 0x41, 0x0e, 0x35, 0x99, 0xfc, 0x43, 0x6a, 0xab, 0xe7, 0x43, 0xd1,
	0x21, 0xf5, 0x3b, 0x55, 0x6a, 0x32, 0x58, 0x01, 0x4b, 0x84, 0x19, 0xd8, 0x25, 0x3c, 0xbd, 0xe0,
	0xce, 0x74, 0x82, 0x3d, 0x9b, 0xda, 0x6d, 0xf9, 0x59, 0x2a, 0x6b, 0x21, 0x10, 0xd6, 0x85, 0xee,
	0x30, 0x90, 0x41, 0x0d, 0x2c, 0x5a, 0x8e, 0x48, 0xf4, 0xb0, 0x8f, 0x5c, 0x8f, 0x1e, 0x53, 0x8b,
	0xf0, 0xe3, 0xd7, 0xdf, 0xa7, 0xe2, 0xa0, 0xe5, 0x14, 0x84, 0xac, 0xd6, 0x57, 0xf1, 0x0c, 0xc8,
	0x71, 0x89, 0x87, 0x7d, 0xc7, 0xe3, 0x73, 0x6f, 0x10, 0x93, 0x88, 0x7b, 0xbf, 0xb0, 0x8d, 0x3f,
	0xa6, 0x42, 0x57, 0x22, 0x79, 0xad, 0xaf, 0x8e, 0x5a, 0x5a, 0x01, 0x4b, 0x62, 0xaa, 0x10, 0xb6,
	0x2c, 0x44, 0x4d, 0x62, 0xfb, 0xb4, 0x45, 0x89, 0xc7, 0x64, 0x25, 0xbd, 0xe7, 0x42, 0xa8, 0x58,
	0x56, 0x29, 0x96, 0xf1, 0xb6, 0x8a, 0x4c, 0x0d, 0x7b, 0x26, 0x3f, 0xf1, 0xb4, 0x1c, 0x4f, 0xe4,
	0x6a, 0xc1, 0xb0, 0x32, 0x79, 0x27, 0xbd, 0xad, 0x91, 0xbc, 0xd0, 0x57, 0x07, 0x63, 0xcb, 0x60,
	0x19, 0x2c, 0x46, 0xb9, 0x3b, 0x7d, 0x4f, 0x10, 0x23, 0xef, 0x98, 0x81, 0x6d, 0x26, 0x17, 0xd2,
	0x9b, 0x9a, 0xd0, 0xd5, 0x43, 0x19, 0xef, 0xba, 0x58, 0x3a, 0xdc, 0x8a, 0x70, 0x78, 0x44, 0xde,
	0xf5, 0xb0, 0xc5, 0xe4, 0x62, 0x3a, 0xaf, 0x2f, 0xe4, 0xae, 0xaf, 0x0a, 0x19, 0x7c, 0x06, 0x66,
	0xc9, 0x29, 0xf5, 0x91, 0x13, 0x9e, 0x80, 0x65, 0x35, 0x7d, 0x27, 0xe6, 0x82, 0x6a, 0x70, 0x9e,
	0x85, 0x3f, 0x82, 0x59, 0x46, 0xde, 0x05, 0xd7, 0x80, 0x86, 0xc3, 0x7c, 0x79, 0x77, 0x82, 0x44,
	0x6d, 0x86, 0x91, 0x77, 0x35, 0xdc, 0x26, 0x05, 0x87, 0x89, 0xf8, 0xe5, 0x61, 0xdb, 0x74, 0xba,
	0x09, 0xc8, 0xde, 0x04, 0x90, 0xb9, 0x40, 0xd5, 0xe7, 0xfc, 0x0c, 0x96, 0x13, 0x37, 0xc2, 0x22,
	0xf7, 0x77, 0xbc, 0x23, 0xee, 0x15, 0xfb, 0xe9, 0xc9, 0xd8, 0xf5, 0x8b, 0xf3, 0xfc, 0xb5, 0xfc,
	0xc6, 0xe3, 0x47, 0xfa, 0x62, 0x0c, 0x29, 0xe3, 0xd3, 0xc3, 0x00, 0x01, 0x3b, 0xe0, 0x76, 0x02,
	0x3e, 0x7a, 0xcf, 0x5b, 0x9a, 0xf0, 0xca, 0x62, 0x23, 0xbf, 0x91, 0xcf, 0xe5, 0xf4, 0x95, 0x18,
	0xf6, 0x62, 0xe8, 0xf6, 0xf7, 0xed, 0xa5, 0x96, 0x82, 0x6d, 0xe2, 0x4f, 0x13, 0x5e, 0x69, 0x06,
	0x96, 0x2e, 0xb3, 0x15, 0x25, 0xaf, 0x30, 0x61, 0xcb, 0xc6, 0x2e, 0xdf, 0x3f, 0xe4, 0x9f, 0xd2,
	0x2d, 0x64, 0x2f, 0xce, 0xf3, 0xb3, 0xf9, 0xc1, 0x1b, 0xa4, 0x98, 0x54, 0x09, 0x40, 0xf0, 0x05,
	0x98, 0xe7, 0x07, 0x3e, 0x7a, 0x4c, 0xfa, 0x1b, 0x93, 0x36, 0x69, 0x5e, 0x2c, 0xae, 0xa7, 0x9e,
	0x04, 0xe8, 0xb9, 0x90, 0x12, 0xed, 0x54, 0x2d, 0xb0, 0xe2, 0x7b, 0xd8, 0x38, 0x42, 0x7c, 0x03,
	0x38, 0xa6, 0xfe, 0x19, 0x7a, 0xd7, 0x23, 0xde, 0x59, 0x70, 0x51, 0x53, 0x4e, 0xb7, 0x30, 0x77,
	0x71, 0x9e, 0x07, 0xf9, 0x5c, 0x6e, 0x23, 0x9f, 0x7b, 0xb4, 0x9d, 0xcb, 0xe9, 0xcb, 0x82, 0xa6,
	0x84, 0xb0, 0xe7, 0x9c, 0x25, 0x2e, 0x71, 0xf6, 0x40, 0x96, 0xd8, 0xb8, 0x69, 0x11, 0xd4, 0xa4,
	0x7e, 0x17, 0xbb, 0x7c, 0x05, 0xca, 0xb5, 0xd4, 0xf5, 0x21, 0x05, 0xa2, 0x9d, 0xbe, 0x86, 0x9f,
	0xa8, 0x43, 0x50, 0x07, 0xb3, 0x0e, 0x6e, 0xb7, 0xe5, 0xe7, 0xa9, 0x94, 0xd9, 0x40, 0xb1, 0x1f,
	0x08, 0x78, 0x3e, 0x96, 0x40, 0xbc, 0x75, 0xa8, 0x2d, 0xeb, 0xe9, 0xf9, 0x58, 0xcc, 0xe0, 0x0a,
	0xa8, 0x82, 0xb0, 0x6d, 0x88, 0xf2, 0xad, 0x4d, 0xf4, 0xa7, 0x9e, 0xbe, 0xf1, 0x04, 0x9a, 0x52,
	0x24, 0xe1, 0x21, 0x2d, 0x89, 0x71, 0x6c, 0xeb, 0x4c, 0xa0, 0x1a, 0x13, 0xec, 0x3b, 0x31, 0x2a,
	0x92, 0x25, 0xba, 0xd6, 0xc5, 0x3e, 0xf1, 0x28, 0xb6, 0xe4, 0x83, 0x49, 0xbb, 0x56, 0x0e, 0x15,
	0x89, 0xae, 0x75, 0x89, 0xd7, 0x26, 0x62, 0x80, 0x5e, 0x4c, 0xda, 0xb5, 0x72, 0x24, 0x49, 0xb4,
	0xc5, 0x26, 0xcc, 0xb7, 0x1c, 0xc7, 0x95, 0x0f, 0x27, 0x6d, 0x4b, 0x25, 0x54, 0x24, 0xa6, 0x3b,
	0x8c, 0xf6, 0xf2, 0xcb, 0x49, 0xa7, 0x3b, 0x8c, 0xf3, 0xfc, 0x4c, 0x13, 0x21, 0x1c, 0xcf, 0x97,
	0x5f, 0xa5, 0x9f, 0x69, 0x42, 0xbd, 0xe3, 0xf9, 0x09, 0xfb, 0x3e, 0x35, 0x85, 0xfd, 0xd7, 0x93,
	0xda, 0x6f, 0x04, 0x02, 0xf8, 0x0a, 0x2c, 0xc6, 0x11, 0x14, 0xb9, 0x9e, 0x63, 0x10, 0xc6, 0x08,
	0x93, 0x7f, 0x9e, 0xf8, 0x6a, 0x96, 0xaf, 0x2d, 0x1d, 0x76, 0xa3, 0x10, 0x5a, 0x8b, 0x10, 0x11,
	0xba, 0x7f, 0xa1, 0x15, 0x45, 0xe9, 0x7f, 0xb8, 0x3a, 0x3a, 0xba, 0xad, 0x8a, 0xa2, 0x74, 0x17,
	0xdc, 0x1b, 0x87, 0x16, 0x07, 0xce, 0x36, 0xf6, 0x3b, 0xc4, 0x93, 0xdf, 0x5c, 0xcd, 0xca, 0xda,
	0xa8, 0x95, 0x1a, 0xf1, 0xf6, 0x04, 0x0b, 0xda, 0xe0, 0xee, 0x68, 0xa8, 0x66, 0x06, 0xb6, 0x08,
	0x6a, 0x61, 0xc3, 0x77, 0x3c, 0xf9, 0x97, 0xf4, 0x7d, 0x6c, 0x67, 0xe6, 0xe2, 0x3c, 0xff, 0x59,
	0x6e, 0x33, 0xb7, 0x91, 0xdf, 0xcc, 0xe9, 0x6b, 0xc3, 0xc1, 0xba, 0xce, 0x71, 0xbb, 0x82, 0x06,
	0x5d, 0x70, 0x2f, 0x61, 0x0f, 0xdb, 0xd8, 0x3a, 0xe3, 0x27, 0x8a, 0xa4, 0x41, 0x74, 0x55, 0x83,
	0x89, 0xcd, 0x46, 0x09, 0x80, 0x49, 0x8b, 0x6f, 0xc6, 0xa7, 0xd9, 0x1e, 0xc1, 0x26, 0xe2, 0xeb,
	0x57, 0xfe, 0x35, 0xd5, 0xb1, 0x56, 0x47, 0x53, 0x66, 0x9d, 0x60, 0xb3, 0x6a, 0x5b, 0x67, 0x70,
	0x15, 0x5c, 0xe7, 0x1b, 0xc3, 0x7b, 0xc7, 0x26, 0x32, 0x16, 0x77, 0x04, 0xfd, 0xff, 0xf3, 0x44,
	0x29, 0x74, 0xe2, 0xfe, 0x74, 0x62, 0x97, 0xa7, 0x4d, 0x72, 0x33, 0xd5, 0x66, 0x18, 0x9e, 0xa2,
	0x89, 0x53, 0x84, 0x8e, 0x9f, 0x6f, 0x87, 0x89, 0x3c, 0x96, 0xca, 0x46, 0xfa, 0xf9, 0x76, 0x90,
	0xc7, 0xe3, 0x29, 0x6c, 0x00, 0x39, 0xa6, 0xf9, 0x54, 0x8c, 0x8b, 0xeb, 0xf5, 0xc4, 0xe1, 0xd6,
	0x4c, 0x25, 0x2e, 0xf7, 0x89, 0x81, 0xb4, 0x16, 0x28, 0xe1, 0xaf, 0xe0, 0xee, 0x30, 0xf5, 0x84,
	0x32, 0x82, 0x70, 0xbb, 0xed, 0x91, 0x36, 0xf6, 0x89, 0x4c, 0x52, 0xd9, 0xb7, 0x87, 0xd8, 0x1c,
	0xa0, 0x44, 0x7a, 0x9e, 0xe6, 0x8d, 0xb5, 0x20, 0x22, 0x66, 0x2b, 0x15, 0x7e, 0x6b, 0x0c, 0xfc,
	0x4f, 0x3c, 0x72, 0xfe, 0x11, 0x4c, 0xbf, 0xa5, 0xbe, 0xdc, 0x4e, 0x25, 0xf0, 0x6a, 0xb0, 0x0b,
	0xee, 0x0f, 0xac, 0xd4, 0xe1, 0x4f, 0x03, 0x78, 0x40, 0xe8, 0xa4, 0x2f, 0xd5, 0xcf, 0x2e, 0xce,
	0xf3, 0xd3, 0xcf, 0x7e, 0xc8, 0xe9, 0x77, 0x12, 0xeb, 0xb4, 0x3c, 0xf8, 0xb5, 0x00, 0x0f, 0x0c,
	0xbf, 0x80, 0x3b, 0x7d, 0x53, 0x16, 0xc1, 0x26, 0x8f, 0x69, 0xbc, 0x07, 0x06, 0x75, 0x83, 0xeb,
	0x22, 0x9a, 0xda, 0xec, 0xb5, 0x08, 0xa0, 0x09, 0x7d, 0x2d, 0x29, 0x87, 0xff, 0x04, 0x3e, 0x8f,
	0x4e, 0x6a, 0x16, 0xc1, 0x76, 0xcf, 0x0d, 0x76, 0xc6, 0xc1, 0xb5, 0xf9, 0x76, 0x82, 0xb5, 0xb9,
	0x74, 0x71, 0x9e, 0xcf, 0x8a, 0xb5, 0x99, 0xeb, 0xff, 0xdb, 0xcc, 0xe9, 0x77, 0xc2, 0x57, 0xdd,
	0x01, 0x5c, 0x6c, 0x9f, 0xc9, 0x65, 0x8a, 0x81, 0x4c, 0x5a, 0x2d, 0xc2, 0x0f, 0x30, 0x04, 0x51,
	0x9e, 0xc3, 0xd9, 0x46, 0xcf, 0xf3, 0x88, 0x6d, 0x9c, 0xc9, 0x47, 0x57, 0x08, 0x78, 0xfc, 0x2c,
	0xd4, 0x07, 0x95, 0x9c, 0x42, 0x8c, 0x81, 0x18, 0x2c, 0xc6, 0x26, 0x0c, 0x6c, 0x74, 0x48, 0x70,
	0xdc, 0xb2, 0x26, 0x7c, 0xdf, 0x98, 0xdb, 0xf8, 0x66, 0xfb, 0xbb, 0x6f, 0xbf, 0xf9, 0xe6, 0x69,
	0xfe, 0xf1, 0xd3, 0xa7, 0x4f, 0x75, 0xd8, 0x87, 0x15, 0x38, 0x4b, 0x1c, 0xb7, 0xfe, 0x9c, 0x01,
	0x72, 0xf8, 0xdd, 0x8c, 0xeb, 0x11, 0xcb, 0xc1, 0x26, 0xb2, 0x68, 0xd3, 0xc3, 0x1e, 0x25, 0x4c,
	0xee, 0xde, 0x9f, 0x7e, 0x38, 0xf7, 0xa8, 0xf6, 0x11, 0xef, 0x54, 0x05, 0xb9, 0x16, 0x80, 0xb5,
	0x88, 0xab, 0x2f, 0xb3, 0xb1, 0xe5, 0xd0, 0x05, 0x77, 0x78, 0x64, 0x44, 0xe4, 0xd4, 0xb5, 0x30,
	0xb5, 0xd1, 0xf0, 0x5d, 0xbd, 0x6c, 0x4f, 0x78, 0x4a, 0xde, 0x18, 0x78, 0xc5, 0x23, 0x0e, 0xe3,
	0x6a, 0xc0, 0xd4, 0x06, 0xee, 0xef, 0x61, 0x1d, 0xc8, 0x23, 0x16, 0xc3, 0x18, 0x2f, 0x3b, 0xa9,
	0xee, 0xb9, 0x34, 0x08, 0x0e, 0x63, 0xf9, 0x58, 0x68, 0xf4, 0x49, 0x91, 0x7b, 0x55, 0x68, 0xf4,
	0x6d, 0xd1, 0x73, 0x70, 0x6b, 0x04, 0xea, 0x53, 0x9e, 0xf4, 0xca, 0xef, 0xd2, 0x63, 0xf3, 0x20,
	0xb3, 0x21, 0x74, 0xf0, 0x00, 0xac, 0x8c, 0x22, 0x3d, 0xda, 0x6e, 0xf3, 0x86, 0x7a, 0xe9, 0xe1,
	0x74, 0x08, 0x1a, 0x2a, 0xc7, 0x76, 0x3f, 0xb8, 0xfd, 0x27, 0x32, 0xbb, 0x6a, 0xf7, 0x83, 0x0b,
	0x7d, 0x02, 0x5b, 0x60, 0x7d, 0x04, 0xca, 0x4f, 0x8b, 0xc4, 0x8c, 0x2f, 0xe8, 0x99, 0xec, 0xa7,
	0xe2, 0xef, 0x0e, 0xe2, 0x2b, 0x02, 0xd1, 0xbf, 0x86, 0x67, 0xb0, 0x39, 0xd4, 0x78, 0x86, 0xbb,
	0xae, 0x45, 0x90, 0xc7, 0x77, 0x81, 0xde, 0x55, 0xf7, 0xf9, 0x64, 0x5f, 0xea, 0x02, 0xa4, 0xf3,
	0xdd, 0x40, 0x07, 0xb2, 0xdb, 0x46, 0x1d, 0x6a, 0xfb, 0xc8, 0xb5, 0xb0, 0x8d, 0xa2, 0x1c, 0x83,
	0xda, 0xbe, 0x7c, 0x9c, 0x3e, 0x97, 0x6e, 0x7b, 0x9f, 0xda, 0x7e, 0xcd, 0xc2, 0xb6, 0x1a, 0x64,
	0x1a, 0xd4, 0xe6, 0x59, 0xe5, 0xdd, 0xcb, 0x98, 0xc8, 0xe7, 0x3f, 0xe5, 0x93, 0xf4, 0x0b, 0x95,
	0x71, 0xe4, 0x06, 0xff, 0x01, 0xff, 0x2d, 0x33, 0xd4, 0x66, 0x93, 0x34, 0x7b, 0x6d, 0xe4, 0x7a,
	0xbc, 0xcd, 0xa7, 0x1f, 0x7b, 0xed, 0x5f, 0xeb, 0xdb, 0x2d, 0x72, 0x6c, 0x8d, 0x53, 0x93, 0xfd,
	0x8c, 0x4b, 0xe1, 0x3f, 0x83, 0xd5, 0x81, 0x76, 0x84, 0xef, 0x2b, 0xc3, 0xcf, 0x4d, 0xce, 0x7e,
	0xb7, 0xf7, 0x87, 0xcb, 0xb1, 0xf5, 0xf0, 0xc5, 0xa5, 0x28, 0x5f, 0xaf, 0x83, 0xeb, 0xd1, 0x27,
	0x29, 0x70, 0x05, 0x2c, 0x1d, 0x2a, 0x1a, 0xd2, 0xd4, 0x17, 0xaa, 0x86, 0x0e, 0x2a, 0xf5, 0x9a,
	0x5a, 0x28, 0xed, 0x96, 0xd4, 0xa2, 0xf4, 0x57, 0x70, 0x09, 0x64, 0xe3, 0x47, 0xba, 0x5a, 0xd3,
	0x4a, 0x05, 0x45, 0xca, 0x0c, 0x16, 0x6b, 0xd5, 0xbd, 0x52, 0x41, 0xd1, 0xa4, 0xa9, 0xf5, 0xff,
	0xc9, 0x80, 0xec, 0xc8, 0xe7, 0x27, 0x70, 0x1d, 0xdc, 0xad, 0xbf, 0xaa, 0x14, 0xf6, 0xf5, 0x6a,
	0xa5, 0x7a, 0x50, 0x47, 0x85, 0x6a, 0xb9, 0x5c, 0x6a, 0x0c, 0xd9, 0x59, 0x01, 0x4b, 0x63, 0xea,
	0x54, 0x2b, 0x52, 0x06, 0xae, 0x82, 0xe5, 0x71, 0x8f, 0x76, 0x77, 0xa5, 0x29, 0x78, 0x1b, 0xc8,
	0x63, 0x9e, 0x69, 0x55, 0xde, 0x9c, 0x69, 0xf8, 0x05, 0xb8, 0x37, 0xe6, 0xa9, 0xae, 0x96, 0xab,
	0x0d, 0x15, 0x1d, 0xea, 0xa5, 0x86, 0x2a, 0x5d, 0xfb, 0xed, 0x4a, 0x4a, 0xad, 0xa6, 0xbd, 0x92,
	0x3e, 0x59, 0xff, 0xcf, 0x0c, 0x58, 0x18, 0xf3, 0x19, 0x02, 0xfc, 0x12, 0xdc, 0x2f, 0x54, 0x2b,
	0xf5, 0x86, 0xae, 0x94, 0x2a, 0x0d, 0xa4, 0xbe, 0x2c, 0x68, 0x07, 0xf5, 0x52, 0xb5, 0x32, 0xd4,
	0xb9, 0x35, 0x70, 0x6b, 0x6c, 0x2d, 0xd1, 0xbd, 0xdb, 0x40, 0x1e, 0xff, 0x50, 0x74, 0x70, 0x1d,
	0xdc, 0x1d, 0xfb, 0xb4, 0xa6, 0xe8, 0x8d, 0x52, 0xa3, 0x54, 0xad, 0x48, 0xd3, 0xeb, 0x7f, 0xc9,
	0x80, 0xec, 0xc8, 0x2b, 0x79, 0xde, 0xaf, 0xdd, 0xaa, 0x5e, 0x50, 0x79, 0x55, 0x45, 0xd3, 0x54,
	0x0d, 0x95, 0xab, 0x45, 0x75, 0xa8, 0x65, 0xab, 0x60, 0x79, 0x5c, 0x25, 0xd1, 0xb0, 0x35, 0x70,
	0x6b, 0xec, 0x33, 0xd1, 0xae, 0x7b, 0x60, 0x6d, 0xdc, 0x43, 0x5d, 0xdd, 0xd3, 0xd5, 0x7a, 0x9d,
	0x37, 0x6a, 0x0a, 0x5c, 0x8f, 0x9c, 0x90, 0xcf, 0xae, 0x56, 0xdd, 0x1b, 0xeb, 0x60, 0x8b, 0x40,
	0x8a, 0x1f, 0x15, 0xd5, 0x9d, 0x83, 0xbd, 0x6f, 0xa4, 0xcc, 0x98, 0xd2, 0x6d, 0x69, 0x6a, 0x4c,
	0xe9, 0x63, 0x69, 0x7a, 0x4c, 0xe9, 0x23, 0xe9, 0xda, 0x98, 0xd2, 0xbc, 0xf4, 0x09, 0xcc, 0x82,
	0xd9, 0xb8, 0x54, 0xab, 0xee, 0x49, 0x9f, 0x0e, 0x56, 0xac, 0x54, 0x1b, 0xa5, 0x82, 0x2a, 0x7d,
	0xc6, 0x1d, 0x3c, 0x2e, 0x3d, 0x54, 0xf4, 0x4a, 0xa9, 0xb2, 0x27, 0x5d, 0x87, 0x0b, 0x60, 0x3e,
	0x2e, 0x56, 0x75, 0xbd, 0xaa, 0x4b, 0x37, 0x06, 0x0b, 0x77, 0x95, 0x86, 0xa2, 0x49, 0x60, 0xb0,
	0xb0, 0xa6, 0x54, 0x4a, 0x05, 0x69, 0x66, 0xfd, 0x3f, 0x32, 0x20, 0x3b, 0xf2, 0xd2, 0x97, 0xcf,
	0x14, 0xaf, 0x2a, 0x70, 0xe8, 0x85, 0xaa, 0xef, 0x54, 0xeb, 0xa5, 0xc6, 0xab, 0xa1, 0x71, 0xba,
	0x03, 0x56, 0xc6, 0x55, 0x6a, 0xa8, 0x7a, 0x5d, 0x95, 0x32, 0x7c, 0x3e, 0xc6, 0x3d, 0x2e, 0xaa,
	0xbb, 0xca, 0x81, 0xd6, 0x08, 0x26, 0x6c, 0x5c, 0x85, 0xe0, 0x97, 0x2a, 0x4d, 0xaf, 0xff, 0x39,
	0x03, 0x6e, 0x26, 0xdf, 0xeb, 0x46, 0x16, 0xeb, 0x0d, 0xa5, 0xa1, 0x96, 0xd5, 0xca, 0xf0, 0x8a,
	0x5d, 0x06, 0x70, 0xf0, 0x71, 0xa5, 0x5a, 0x51, 0x83, 0xd0, 0x30, 0x58, 0x5e, 0x2c, 0x6a, 0xd2,
	0xd4, 0x68, 0x71, 0xb9, 0x5a, 0x94, 0xa6, 0x47, 0x8b, 0x15, 0x4d, 0x93, 0xae, 0xad, 0xff, 0x5f,
	0x06, 0x2c, 0x8e, 0x7d, 0x4d, 0xfa, 0x00, 0x7c, 0xde, 0xd0, 0x95, 0x4a, 0x5d, 0x29, 0x70, 0xe7,
	0x47, 0xa5, 0x7a, 0x55, 0x53, 0x1a, 0xa3, 0x2b, 0xee, 0x0f, 0xe0, 0xab, 0xf1, 0xd5, 0x74, 0x55,
	0x29, 0xa2, 0x83, 0x4a, 0xb0, 0xca, 0x1b, 0x6a, 0x51, 0xca, 0xc0, 0x87, 0xe0, 0xcb, 0xdf, 0xa8,
	0x1b, 0xd7, 0x9c, 0x82, 0x5f, 0x83, 0x07, 0x97, 0xd5, 0xac, 0xa9, 0x4a, 0x43, 0xd9, 0xd1, 0x54,
	0x21, 0x92, 0xa6, 0xe1, 0x57, 0x60, 0x7d, 0x7c, 0xd5, 0xba, 0xaa, 0x97, 0x14, 0xad, 0xf4, 0x9a,
	0x57, 0x96, 0xae, 0xad, 0xff, 0x0c, 0x66, 0x12, 0xef, 0x2c, 0x79, 0x30, 0xd8, 0x79, 0xd5, 0x50,
	0x15, 0x54, 0x3d, 0x68, 0xd4, 0x0e, 0x1a, 0xa3, 0x6b, 0x65, 0xe0, 0xe9, 0xbe, 0xfa, 0x52, 0xca,
	0x40, 0x19, 0x2c, 0x0e, 0x94, 0xaa, 0xf5, 0x82, 0x52, 0xe3, 0xed, 0x5d, 0xd7, 0xc1, 0x8d, 0xfe,
	0x9b, 0x4a, 0xbe, 0xd4, 0x5f, 0x96, 0x35, 0xb4, 0x53, 0xaa, 0x28, 0xfa, 0xab, 0xd1, 0x28, 0x9f,
	0x78, 0xb6, 0xa3, 0xd4, 0xd5, 0x27, 0xdb, 0x52, 0x06, 0x42, 0x30, 0x97, 0x28, 0xe6, 0xd6, 0xa6,
	0xd6, 0x5f, 0x0a, 0x66, 0xf0, 0x6a, 0x32, 0x62, 0x56, 0x6b, 0x63, 0xa6, 0xe0, 0x16, 0x58, 0x48,
	0x3c, 0x2b, 0x56, 0x0b, 0x07, 0x7c, 0x7e, 0xa5, 0x0c, 0x77, 0x9c, 0xc4, 0x83, 0x42, 0xb5, 0xd2,
	0xe0, 0xe5, 0x53, 0x3c, 0xc6, 0xce, 0x0d, 0xbe, 0xfc, 0xe2, 0x4e, 0xbb, 0xa3, 0x14, 0x7e, 0xaa,
	0x6b, 0x4a, 0x7d, 0x1f, 0x3d, 0x3f, 0xe0, 0x11, 0x79, 0xd0, 0xc8, 0x02, 0x98, 0x1f, 0xaa, 0x10,
	0x18, 0x18, 0x56, 0x55, 0x2b, 0xd2, 0x14, 0x6f, 0xd1, 0x48, 0xf9, 0xee, 0xae, 0x34, 0x0d, 0x3f,
	0x07, 0x77, 0x86, 0x1f, 0xd4, 0x95, 0x5d, 0x15, 0xa9, 0x95, 0x42, 0xb5, 0xc8, 0x17, 0xfe, 0xb5,
	0xf5, 0xff, 0xce, 0x80, 0xc5, 0x71, 0xbb, 0x3b, 0xf7, 0x9e, 0xda, 0x1e, 0xda, 0xe7, 0xd1, 0xb9,
	0xa6, 0x29, 0x95, 0x20, 0xd4, 0xa0, 0x9a, 0x5e, 0x1a, 0x59, 0x30, 0xf7, 0xc1, 0xed, 0x4b, 0x6b,
	0xf2, 0x76, 0x88, 0x45, 0x7c, 0x79, 0x0d, 0xde, 0x83, 0x07, 0xe0, 0xf3, 0x4b, 0x2b, 0x14, 0xd5,
	0x86, 0x52, 0xd2, 0x54, 0xee, 0x7c, 0x5f, 0x82, 0xfb, 0x97, 0x56, 0x8b, 0x16, 0xfc, 0xb5, 0xf5,
	0x7f, 0xcf, 0x80, 0xe5, 0xf1, 0x79, 0x0d, 0xef, 0x54, 0x7d, 0x5f, 0xd1, 0xd5, 0x22, 0xaa, 0xe9,
	0xaa, 0x56, 0x55, 0x8a, 0x48, 0x2b, 0xed, 0xe8, 0x8a, 0x5e, 0x52, 0xeb, 0x43, 0x9d, 0xfa, 0x1a,
	0x3c, 0xb8, 0xb4, 0xa6, 0x72, 0xd0, 0xa8, 0x22, 0xf5, 0x65, 0x4d, 0x53, 0x4a, 0x7c, 0x3f, 0xf9,
	0xad, 0xaa, 0xc9, 0xe6, 0x4a, 0x53, 0xeb, 0xff, 0x35, 0x05, 0x96, 0x86, 0x0f, 0x35, 0x75, 0xe2,
	0xe7, 0xf3, 0xd0, 0x04, 0x52, 0x22, 0x93, 0x14, 0x0f, 0xc2, 0x3f, 0xb2, 0xf8, 0xee, 0x83, 0x0f,
	0x4b, 0xfa, 0x7c, 0x9c, 0x4f, 0x8a, 0x22, 0xf8, 0x1a, 0xcc, 0xf4, 0x18, 0xf1, 0x22, 0x03, 0x53,
	0x1f, 0x6b, 0x00, 0x70, 0x5a, 0xc8, 0xfe, 0x15, 0xcc, 0x45, 0xb7, 0x62, 0x21, 0x7e, 0xfa, 0x63,
	0xf1, 0xb3, 0x21, 0x30, 0x28, 0xd8, 0xf9, 0xd7, 0x0c, 0xf8, 0x7a, 0x80, 0x85, 0x5d, 0x7a, 0x29,
	0xef, 0x75, 0xa3, 0x4d, 0xfd, 0x4e, 0xaf, 0xb9, 0x69, 0x38, 0xdd, 0xad, 0x40, 0xb5, 0x11, 0xfc,
	0xd9, 0x4b, 0xdb, 0xd9, 0x68, 0x13, 0x5b, 0x1c, 0xaf, 0xb7, 0x26, 0xfa, 0x83, 0x9c, 0xef, 0xe3,
	0xc2, 0xe6, 0xa7, 0x42, 0xf7, 0xf8, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0xa7, 0x21, 0x00, 0x25,
	0xcb, 0x33, 0x00, 0x00,
}
