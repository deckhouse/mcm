/*
Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package internalversion

import (
	machine "github.com/gardener/machine-controller-manager/pkg/apis/machine"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// YandexMachineClassLister helps list YandexMachineClasses.
type YandexMachineClassLister interface {
	// List lists all YandexMachineClasses in the indexer.
	List(selector labels.Selector) (ret []*machine.YandexMachineClass, err error)
	// YandexMachineClasses returns an object that can list and get YandexMachineClasses.
	YandexMachineClasses(namespace string) YandexMachineClassNamespaceLister
	YandexMachineClassListerExpansion
}

// yandexMachineClassLister implements the YandexMachineClassLister interface.
type yandexMachineClassLister struct {
	indexer cache.Indexer
}

// NewYandexMachineClassLister returns a new YandexMachineClassLister.
func NewYandexMachineClassLister(indexer cache.Indexer) YandexMachineClassLister {
	return &yandexMachineClassLister{indexer: indexer}
}

// List lists all YandexMachineClasses in the indexer.
func (s *yandexMachineClassLister) List(selector labels.Selector) (ret []*machine.YandexMachineClass, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*machine.YandexMachineClass))
	})
	return ret, err
}

// YandexMachineClasses returns an object that can list and get YandexMachineClasses.
func (s *yandexMachineClassLister) YandexMachineClasses(namespace string) YandexMachineClassNamespaceLister {
	return yandexMachineClassNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// YandexMachineClassNamespaceLister helps list and get YandexMachineClasses.
type YandexMachineClassNamespaceLister interface {
	// List lists all YandexMachineClasses in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*machine.YandexMachineClass, err error)
	// Get retrieves the YandexMachineClass from the indexer for a given namespace and name.
	Get(name string) (*machine.YandexMachineClass, error)
	YandexMachineClassNamespaceListerExpansion
}

// yandexMachineClassNamespaceLister implements the YandexMachineClassNamespaceLister
// interface.
type yandexMachineClassNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all YandexMachineClasses in the indexer for a given namespace.
func (s yandexMachineClassNamespaceLister) List(selector labels.Selector) (ret []*machine.YandexMachineClass, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*machine.YandexMachineClass))
	})
	return ret, err
}

// Get retrieves the YandexMachineClass from the indexer for a given namespace and name.
func (s yandexMachineClassNamespaceLister) Get(name string) (*machine.YandexMachineClass, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(machine.Resource("yandexmachineclass"), name)
	}
	return obj.(*machine.YandexMachineClass), nil
}
